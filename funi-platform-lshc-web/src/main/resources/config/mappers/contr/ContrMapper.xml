<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.funi.platform.lshc.mapper.contr.ContrMapper">
  <resultMap id="BaseResultMap" type="com.funi.platform.lshc.entity.contr.Contr">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="contract_no_prefix" jdbcType="VARCHAR" property="contractNoPrefix" />
    <result column="service_num" jdbcType="VARCHAR" property="serviceNum" />
    <result column="contract_no_seq" jdbcType="VARCHAR" property="contractNoSeq" />
    <result column="contract_no" jdbcType="VARCHAR" property="contractNo" />
    <result column="contract_status" jdbcType="CHAR" property="contractStatus" />
    <result column="contract_process_status" jdbcType="CHAR" property="contractProcessStatus" />
    <result column="contract_type" jdbcType="CHAR" property="contractType" />
    <result column="rent_type" jdbcType="CHAR" property="rentType" />
    <result column="lessee_id" jdbcType="VARCHAR" property="lesseeId" />
    <result column="rent_start_date" jdbcType="CHAR" property="rentStartDate" />
    <result column="rent_end_date" jdbcType="CHAR" property="rentEndDate" />
    <result column="rental_payto_date" jdbcType="CHAR" property="rentalPaytoDate" />
    <result column="contract_invalid_date" jdbcType="CHAR" property="contractInvalidDate" />
    <result column="contract_invalid_reason" jdbcType="VARCHAR" property="contractInvalidReason" />
    <result column="archive_room_no" jdbcType="CHAR" property="archiveRoomNo" />
    <result column="archive_cabinet_no" jdbcType="CHAR" property="archiveCabinetNo" />
    <result column="archive_file_no" jdbcType="VARCHAR" property="archiveFileNo" />
    <result column="bulid_area" jdbcType="DECIMAL" property="bulidArea" />
    <result column="rent_area" jdbcType="DECIMAL" property="rentArea" />
    <result column="rental_stand_amount" jdbcType="DECIMAL" property="rentalStandAmount" />
    <result column="rental_month_amount" jdbcType="DECIMAL" property="rentPerMonth" />
    <result column="rental_setting_type" jdbcType="CHAR" property="rentalSettingType" />
    <result column="rental_payment_type" jdbcType="CHAR" property="rentalPaymentType" />
    <result column="latefee_payment" jdbcType="CHAR" property="latefeePayment" />
    <result column="latefee_payment_type" jdbcType="CHAR" property="latefeePaymentType" />
    <result column="latefee_payment_value1" jdbcType="DECIMAL" property="latefeePaymentValue1" />
    <result column="latefee_payment_value2" jdbcType="DECIMAL" property="latefeePaymentValue2" />
    <result column="deposit_amount" jdbcType="DECIMAL" property="depositAmount" />
    <result column="evaluate_price" jdbcType="DECIMAL" property="evaluatePrice" />
    <result column="deposit_bill_no" jdbcType="CHAR" property="depositBillNo" />
    <result column="add_information" jdbcType="VARCHAR" property="addInformation" />
    <result column="document_no" jdbcType="VARCHAR" property="documentNo" />
    <result column="document_cnt" jdbcType="DECIMAL" property="documentCnt" />
    <result column="document_date" jdbcType="CHAR" property="documentDate" />
    <result column="document_add_info" jdbcType="VARCHAR" property="documentAddInfo" />
    <result column="contract_register_user_id" jdbcType="VARCHAR" property="contractRegisterUserId" />
    <result column="contract_register_time" jdbcType="TIMESTAMP" property="contractRegisterTime" />
    <result column="contract_issue_user_id" jdbcType="VARCHAR" property="contractIssueUserId" />
    <result column="contract_issue_time" jdbcType="TIMESTAMP" property="contractIssueTime" />
    <result column="contract_receive_office" jdbcType="VARCHAR" property="contractReceiveOffice" />
    <result column="contract_receive_user" jdbcType="VARCHAR" property="contractReceiveUser" />
    <result column="contract_receive_time" jdbcType="TIMESTAMP" property="contractReceiveTime" />
    <result column="contract_return_user" jdbcType="VARCHAR" property="contractReturnUser" />
    <result column="contract_recycle_user_id" jdbcType="VARCHAR" property="contractRecycleUserId" />
    <result column="create_unit_id" jdbcType="CHAR" property="createUnitId" />
    <result column="contract_no_extended" jdbcType="VARCHAR" property="contractNoExtended" />
    <result column="contract_recycle_time" jdbcType="TIMESTAMP" property="contractRecycleTime" />
    <result column="is_deleted" jdbcType="DECIMAL" property="isDeleted" />
    <result column="version" jdbcType="DECIMAL" property="version" />
    <result column="sys_create_time" jdbcType="TIMESTAMP" property="sysCreateTime" />
    <result column="sys_update_time" jdbcType="TIMESTAMP" property="sysUpdateTime" />
    <result column="sys_delete_time" jdbcType="TIMESTAMP" property="sysDeleteTime" />
    <result column="sys_create_id" jdbcType="VARCHAR" property="sysCreateId" />
    <result column="sys_update_id" jdbcType="VARCHAR" property="sysUpdateId" />
    <result column="sys_delete_id" jdbcType="VARCHAR" property="sysDeleteId" />
  </resultMap>


  <resultMap id="ContractDto" type="com.funi.platform.lshc.dto.ContractDto">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="service_num" jdbcType="VARCHAR" property="serviceNum" />
    <result column="businessTypeName" jdbcType="VARCHAR" property="businessTypeName" />
    <result column="task_name" jdbcType="VARCHAR" property="nodeName" />
    <result column="jobAcceptId" jdbcType="VARCHAR" property="jobAcceptId" />
    <result column="contract_no" jdbcType="VARCHAR" property="contractNo" />
    <result column="contract_status" jdbcType="CHAR" property="contractStatus" />
    <result column="houseNum" property="houseNum"/>
    <result column="BULID_AREA" property="houseArea"/>
    <result column="rent_area" property="rentArea"/>
    <result column="rental_month_amount" property="rentPerMonth"/>
    <result column="organization_name" property="organizationName"/>
    <result column="organization_contract" property="contacts"/>
    <result column="organization_tel" property="organizationPhone"/>
    <result column="lessee_name" property="renter"/>
    <result column="unique_id" property="cardNum"/>
    <result column="personal_tel" property="sellerPhone"/>
    <result column="rent_start_date" property="rentStartDate"/>
    <result column="rent_end_date" property="rentEndDate"/>
    <result column="rental_payto_date" property="rentalPayToDate"/>
    <result column="contract_invalid_date" property="contractInvalidDate"/>
    <result column="contract_invalid_reason" property="contractInvalidReason"/>
    <result column="contract_status" property="contractStatus"/>
    <result column="organization_lessee_name" property="organizationLesseeName"/>
    <result column="organization_lessee_id_no" property="organizationLesseeIdNo"/>
    <result column="organization_lessee_tel" property="organizationLesseeTel"/>
  </resultMap>
  <sql id="Base_Column_List">
    id,service_num, contract_no_prefix, contract_no_seq, contract_no, contract_status, contract_process_status,
    contract_type, rent_type, lessee_id, rent_start_date, rent_end_date, rental_payto_date,
    contract_invalid_date, contract_invalid_reason, archive_room_no, archive_cabinet_no,
    archive_file_no, bulid_area, rent_area, rental_stand_amount, rental_month_amount,
    rental_setting_type, rental_payment_type, latefee_payment, latefee_payment_type,
    latefee_payment_value1, latefee_payment_value2, deposit_amount, deposit_bill_no,
    add_information, document_no, document_cnt, document_date, document_add_info, contract_register_user_id,
    contract_register_time, contract_issue_user_id, contract_issue_time, contract_receive_office,
    contract_receive_user, contract_receive_time, contract_return_user, contract_recycle_user_id,evaluate_price,
    create_unit_id, contract_no_extended, contract_recycle_time, is_deleted, version,
    sys_create_time, sys_update_time, sys_delete_time, sys_create_id, sys_update_id,
    sys_delete_id
  </sql>

  <insert id="insert" parameterType="com.funi.platform.lshc.entity.contr.Contr">
    insert into ghouse_contr (id, contract_no_prefix, contract_no_seq,
      contract_no, contract_status, contract_process_status,
      contract_type, rent_type, lessee_id,
      rent_start_date, rent_end_date, rental_payto_date,
      contract_invalid_date, contract_invalid_reason,
      archive_room_no, archive_cabinet_no, archive_file_no,
      bulid_area, rent_area, rental_stand_amount,
      rental_month_amount, rental_setting_type, rental_payment_type,
      latefee_payment, latefee_payment_type, latefee_payment_value1,
      latefee_payment_value2, deposit_amount, deposit_bill_no,
      add_information, document_no, document_cnt,
      document_date, document_add_info, contract_register_user_id,
      contract_register_time, contract_issue_user_id,
      contract_issue_time, contract_receive_office,
      contract_receive_user, contract_receive_time,
      contract_return_user, contract_recycle_user_id,
      create_unit_id, contract_no_extended, contract_recycle_time,
      is_deleted, version, sys_create_time,
      sys_update_time, sys_delete_time, sys_create_id,
      sys_update_id, sys_delete_id,evaluate_price,is_finalï¼Œbusiness_type,service_num)
    values (#{id,jdbcType=VARCHAR}, #{contractNoPrefix,jdbcType=VARCHAR}, #{contractNoSeq,jdbcType=VARCHAR}, 
      #{contractNo,jdbcType=VARCHAR}, #{contractStatus,jdbcType=CHAR}, #{contractProcessStatus,jdbcType=CHAR}, 
      #{contractType,jdbcType=CHAR}, #{rentType,jdbcType=CHAR}, #{lesseeId,jdbcType=VARCHAR}, 
      #{rentStartDate,jdbcType=CHAR}, #{rentEndDate,jdbcType=CHAR}, #{rentalPaytoDate,jdbcType=CHAR}, 
      #{contractInvalidDate,jdbcType=CHAR}, #{contractInvalidReason,jdbcType=VARCHAR}, 
      #{archiveRoomNo,jdbcType=CHAR}, #{archiveCabinetNo,jdbcType=CHAR}, #{archiveFileNo,jdbcType=VARCHAR}, 
      #{bulidArea,jdbcType=DECIMAL}, #{rentArea,jdbcType=DECIMAL}, #{rentalStandAmount,jdbcType=DECIMAL}, 
      #{rentPerMonth,jdbcType=DECIMAL}, #{rentalSettingType,jdbcType=CHAR}, #{rentalPaymentType,jdbcType=CHAR},
      #{latefeePayment,jdbcType=CHAR}, #{latefeePaymentType,jdbcType=CHAR}, #{latefeePaymentValue1,jdbcType=DECIMAL}, 
      #{latefeePaymentValue2,jdbcType=DECIMAL}, #{depositAmount,jdbcType=DECIMAL}, #{depositBillNo,jdbcType=CHAR}, 
      #{addInformation,jdbcType=VARCHAR}, #{documentNo,jdbcType=VARCHAR}, #{documentCnt,jdbcType=DECIMAL}, 
      #{documentDate,jdbcType=CHAR}, #{documentAddInfo,jdbcType=VARCHAR}, #{contractRegisterUserId,jdbcType=VARCHAR}, 
      #{contractRegisterTime,jdbcType=TIMESTAMP}, #{contractIssueUserId,jdbcType=VARCHAR}, 
      #{contractIssueTime,jdbcType=TIMESTAMP}, #{contractReceiveOffice,jdbcType=VARCHAR}, 
      #{contractReceiveUser,jdbcType=VARCHAR}, #{contractReceiveTime,jdbcType=TIMESTAMP}, 
      #{contractReturnUser,jdbcType=VARCHAR}, #{contractRecycleUserId,jdbcType=VARCHAR}, 
      #{createUnitId,jdbcType=CHAR}, #{contractNoExtended,jdbcType=VARCHAR}, #{contractRecycleTime,jdbcType=TIMESTAMP}, 
      #{isDeleted,jdbcType=DECIMAL}, #{version,jdbcType=DECIMAL}, #{sysCreateTime,jdbcType=TIMESTAMP}, 
      #{sysUpdateTime,jdbcType=TIMESTAMP}, #{sysDeleteTime,jdbcType=TIMESTAMP}, #{sysCreateId,jdbcType=VARCHAR}, 
      #{sysUpdateId,jdbcType=VARCHAR}, #{sysDeleteId,jdbcType=VARCHAR},#{evaluatePrice},0,#{businessType},#{serviceNum})
  </insert>

  <insert id="insertFinal">
   insert into ghouse_contr (id, contract_no_prefix, contract_no_seq,
      contract_no, contract_status, contract_process_status,
      contract_type, rent_type, lessee_id,
      rent_start_date, rent_end_date, rental_payto_date,
      contract_invalid_date, contract_invalid_reason,
      archive_room_no, archive_cabinet_no, archive_file_no,
      bulid_area, rent_area, rental_stand_amount,
      rental_month_amount, rental_setting_type, rental_payment_type,
      latefee_payment, latefee_payment_type, latefee_payment_value1,
      latefee_payment_value2, deposit_amount, deposit_bill_no,
      add_information, document_no, document_cnt,
      document_date, document_add_info, contract_register_user_id,
      contract_register_time, contract_issue_user_id,
      contract_issue_time, contract_receive_office,
      contract_receive_user, contract_receive_time,
      contract_return_user, contract_recycle_user_id,
      create_unit_id, contract_no_extended, contract_recycle_time,
      is_deleted, version, sys_create_time,
       sys_delete_time, sys_create_id,
      sys_update_id, sys_delete_id,evaluate_price,is_final,business_type,service_num)
      select
      #{id}, contract_no_prefix, contract_no_seq,
      contract_no, #{contractStatus}, contract_process_status,
      contract_type, rent_type, #{lesseeId},
      rent_start_date, rent_end_date, rental_payto_date,
      contract_invalid_date, contract_invalid_reason,
      archive_room_no, archive_cabinet_no, archive_file_no,
      bulid_area, rent_area, rental_stand_amount,
      rental_month_amount, rental_setting_type, rental_payment_type,
      latefee_payment, latefee_payment_type, latefee_payment_value1,
      latefee_payment_value2, deposit_amount, deposit_bill_no,
      add_information, document_no, document_cnt,
      document_date, document_add_info, contract_register_user_id,
      contract_register_time, contract_issue_user_id,
      contract_issue_time, contract_receive_office,
      contract_receive_user, contract_receive_time,
      contract_return_user, contract_recycle_user_id,
      create_unit_id, contract_no_extended, contract_recycle_time,
      is_deleted, version, sysdate,
       sys_delete_time, #{userId},
      sys_update_id,sys_delete_id,evaluate_price,#{isFinal},business_type,#{newServiceNum}
      from ghouse_contr where service_num=#{serviceNum} and is_final=#{isFinalW}

  </insert>

  <select id="selectByQuery" resultMap="ContractDto">
      select
              distinct
          c.id,c.contract_no,c.rent_start_date,c.rent_end_date,c.rental_payto_date,c.contract_invalid_date,
          c.contract_invalid_reason,c.rent_area,c.rental_month_amount,c.service_num,c.contract_status,
          l.organization_name,l.organization_contract,l.organization_tel,nvl2(l.lessee_name,l.lessee_name,l.organization_lessee_name) as lessee_name,
          nvl2(l.unique_id,l.unique_id,l.organization_lessee_id_no) as unique_id,
          l.organization_lessee_name,nvl2(l.personal_tel,l.personal_tel,l.organization_lessee_tel)  as personal_tel,
          count(ch.id) over(partition by c.id) as houseNum ,c.sys_create_time
        from ghouse_contr c
        inner join ghouse_lessee l on c.lessee_id = l.id
        inner join ghouse_contr_house ch on  c.id = ch.contr_id
        inner join ghouse_house_info hou on hou.id=ch.house_id
      where c.is_deleted=0 and l.is_deleted=0 and ch.is_deleted=0  and  (c.is_final=1 or (c.is_final=0 and c.contract_status='EXAMINING'))
      <if test="authorityList != null and authorityList.size > 0">
          and c.create_unit_id in
          <foreach collection="authorityList" index="idx" item="authority" open="(" close=")" separator=",">
              #{authority.dm}
          </foreach>
      </if>
      <if test="userId != null and userId != ''">
          and c.SYS_CREATE_ID=#{userId}
      </if>
      <if test="manageOrganizationId!=null">
        and c.create_unit_id=#{manageOrganizationId}
      </if>
      <if test="contractStatus!=null">
        and c.contract_status=#{contractStatus}
      </if>
      <if test="archiveRoomNo!=null">
        and c.archive_room_no=#{archiveRoomNo}
      </if>
      <if test="archiveCabinetNo!=null">
        and c.archive_cabinet_no=#{archiveCabinetNo}
      </if>
      <if test="keyword!=null">
        and (l.organization_name=#{keyword} or l.lessee_name=#{keyword} or c.contract_no= #{keyword} or hou.house_no=#{keyword})
      </if>
      order by c.sys_create_time desc
  </select>

    <select id="selectContractListByHouseId" resultMap="ContractDto">
         select
              distinct
          c.id,c.contract_no,c.rent_start_date,c.rent_end_date,c.rental_payto_date,c.contract_invalid_date,
          c.contract_invalid_reason,c.rent_area,c.rental_month_amount,c.service_num,c.contract_status,
          l.organization_name,l.organization_contract,l.organization_tel,l.lessee_name,l.unique_id,l.personal_tel,
          count(ch.id) over(partition by c.id) as houseNum
        from ghouse_contr c
        inner join ghouse_lessee l on c.lessee_id = l.id
        inner join ghouse_contr_house ch on  c.id = ch.contr_id
        join GHOUSE_CONTR_HOUSE gi on gi.CONTR_ID=c.id

      where c.is_deleted=0 and l.is_deleted=0 and ch.is_deleted=0  and c.is_final=1
      and  gi.house_id=#{houseId}
    </select>
  <select id="selectCheckByQuery" resultMap="ContractDto">
        select
        distinct
        c.id,c.contract_no,c.rent_start_date,c.rent_end_date,c.rental_payto_date,c.contract_invalid_date,
        c.contract_invalid_reason,c.rent_area,c.rental_month_amount,c.service_num,c.contract_status,
        l.organization_name,l.organization_contract,l.organization_tel,nvl2(l.lessee_name,l.lessee_name,l.organization_lessee_name) as lessee_name,l.unique_id,nvl2(l.personal_tel,l.personal_tel,l.organization_lessee_tel)  as personal_tel,
        count(ch.id) over(partition by c.id) as houseNum
        from ghouse_contr c
        inner join ghouse_lessee l on c.lessee_id = l.id
        inner join ghouse_contr_house ch on  c.id = ch.contr_id
        where c.is_deleted=0 and l.is_deleted=0 and ch.is_deleted=0  and c.is_final=1
              and to_date(rent_end_date,'yyyy-MM-dd') <![CDATA[<]]> sysdate +30 and contract_status='VALID'
      <if test="authorityList != null and authorityList.size > 0">
          and c.create_unit_id in
          <foreach collection="authorityList" index="idx" item="authority" open="(" close=")" separator=",">
              #{authority.dm}
          </foreach>
      </if>
      <if test="userId != null and userId != ''">
          and c.SYS_CREATE_ID=#{userId}
      </if>
        <if test="manageOrganizationId!=null">
            and c.create_unit_id=#{manageOrganizationId}
        </if>
        <if test="archiveRoomNo!=null">
            and c.archive_room_no=#{archiveRoomNo}
        </if>
        <if test="archiveCabinetNo!=null">
            and c.archive_cabinet_no=#{archiveCabinetNo}
        </if>
      <if test="keyword!=null">
          and (l.organization_name=#{keyword} or l.lessee_name=#{keyword} or c.contract_no= #{keyword})
      </if>
    </select>

  <select id="selectUndoListByQuery" resultMap="ContractDto">
    select
    distinct
    c.service_num,c.id,c.contract_no,c.rent_start_date,c.rent_end_date,c.rental_payto_date,c.contract_invalid_date,
    c.contract_invalid_reason,c.rent_area,c.rental_month_amount,
    l.organization_name,l.organization_contract,l.organization_tel,nvl2(l.lessee_name,l.lessee_name,l.organization_lessee_name) as lessee_name,
      nvl2(l.unique_id,l.unique_id,l.organization_lessee_id_no) as unique_id,
      nvl2(l.personal_tel,l.personal_tel,l.organization_lessee_tel)  as personal_tel,
      l.organization_lessee_name,l.organization_lessee_id_no,l.organization_lessee_tel,
    ja.id as jobAcceptId,ja.type_name as businessTypeName,bt.task_name,
    count(ch.id) over(partition by c.id) as houseNum ,c.sys_create_time
    from ghouse_contr c
    inner join ghouse_lessee l on c.lessee_id = l.id
    inner join ghouse_contr_house ch on  c.id = ch.contr_id
      inner join ghouse_house_info hou on hou.id=ch.house_id
    inner join business_task bt on bt.business_id = c.service_num
    left  join ghouse_job_accept ja on c.service_num=ja.service_num
    where c.is_deleted=0 and l.is_deleted=0 and ch.is_deleted=0
      and c.is_final=0 and l.is_final=0 and ch.is_final=0
      and bt.owner_type = #{ownerType}
      and bt.owner in
    <foreach collection="owner" item="item" open="(" close=")" separator=",">
      #{item.id}
    </foreach>
    <if test="manageOrganizationId!=null">
      and c.create_unit_id=#{manageOrganizationId}
    </if>
    <if test="contractStatus!=null">
      and c.contract_status=#{contractStatus}
    </if>
    <if test="archiveRoomNo!=null">
      and c.archive_room_no=#{archiveRoomNo}
    </if>
    <if test="archiveCabinetNo!=null">
      and c.archive_cabinet_no=#{archiveCabinetNo}
    </if>
      <if test="serviceNum!=null">
          and c.service_num=#{serviceNum}
      </if>
    <if test="keyword!=null">
      and (l.organization_name=#{keyword} or l.lessee_name=#{keyword} or c.contract_no= #{keyword} or hou.house_no=#{keyword})
    </if>
      order by c.sys_create_time desc
  </select>

  <select id="selectDoneListByQuery" resultMap="ContractDto">
    select
    distinct
    c.service_num,c.id,c.contract_no,c.rent_start_date,c.rent_end_date,c.rental_payto_date,c.contract_invalid_date,
    c.contract_invalid_reason,c.rent_area,c.rental_month_amount,
    l.organization_name,l.organization_contract,l.organization_tel,nvl2(l.lessee_name,l.lessee_name,l.organization_lessee_name) as lessee_name,
      nvl2(l.unique_id,l.unique_id,l.organization_lessee_id_no) as unique_id,
      nvl2(l.personal_tel,l.personal_tel,l.organization_lessee_tel)  as personal_tel,
      l.organization_lessee_name,l.organization_lessee_id_no,l.organization_lessee_tel,
    ja.id as jobAcceptId,ja.type_name as businessTypeName,j.node_name as task_name,
    count(ch.id) over(partition by c.id) as houseNum ,c.sys_create_time
    from ghouse_contr c
    inner join ghouse_lessee l on c.lessee_id = l.id
    inner join ghouse_contr_house ch on  c.id = ch.contr_id
      inner join ghouse_house_info hou on hou.id=ch.house_id
    inner join job_log j on c.service_num = j.business_id and j.is_deleted=0
    inner  join ghouse_job_accept ja on c.service_num=ja.service_num
    where c.is_deleted=0 and l.is_deleted=0 and ch.is_deleted=0
    and c.is_final=0 and l.is_final=0 and ch.is_final=0
      and j.auditor = #{userId}
    <if test="manageOrganizationId!=null">
      and c.create_unit_id=#{manageOrganizationId}
    </if>
    <if test="contractStatus!=null">
      and c.contract_status=#{contractStatus}
    </if>
    <if test="archiveRoomNo!=null">
      and c.archive_room_no=#{archiveRoomNo}
    </if>
    <if test="archiveCabinetNo!=null">
      and c.archive_cabinet_no=#{archiveCabinetNo}
    </if>
      <if test="serviceNum!=null">
          and c.service_num=#{serviceNum}
      </if>
    <if test="keyword!=null">
      and (l.organization_name=#{keyword} or l.lessee_name=#{keyword} or c.contract_no= #{keyword} or hou.house_no=#{keyword})
    </if>
      order by c.sys_create_time desc
  </select>

  <select id="generateContractNo" resultType="java.lang.String">
      select SEQ_GHOUSE_CONTRACT_NO.nextval from dual
  </select>
  <select id="generateServiceNum" resultType="java.lang.String">
    select SEQ_GHOUSE_CONT_SERVICE_NUM.nextval from dual
  </select>

  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from ghouse_contr
    where ID = #{id,jdbcType=VARCHAR}
  </select>

  <select id="selectById"  resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from ghouse_contr
    where ID = #{id} and is_final=#{flag}
  </select>

    <select id="selectByServiceNum"  resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from ghouse_contr
        where service_num = #{serviceNum} and is_final=#{flag}
    </select>

  <update id="modifyStatus">
      update ghouse_contr set contract_status=#{contractStatus}
      where service_num=#{serviceNum} and is_final=#{isFinal} and is_deleted=0
  </update>

    <update id="modifyStatusByContractNo">
        update ghouse_contr set contract_status=#{contractStatus}
        where contract_no=#{contractNo} and is_final=#{isFinal} and is_deleted=0
    </update>

    <update id="invalid">
        update ghouse_contr set contract_status=#{contractStatus},contract_invalid_reason=#{invalidReason},
                contract_invalid_date=to_char(sysdate,'yyyy-MM-dd')
        where contract_no=#{contractNo} and is_final=#{isFinal} and is_deleted=0 and contract_status!='INVALID'
    </update>

  <select id="selectContractNo" resultType="java.lang.String">
      select contract_no from ghouse_contr
      where is_final=#{isFinal} and service_num=#{serviceNum} and is_deleted=0
  </select>

  <update id="modifyOldContract">
   update ghouse_contr c set c.contract_status=#{contractStatus}
      <if test="invalidReason!=null">
          ,contract_invalid_reason=#{invalidReason},
          contract_invalid_date=to_char(sysdate,'yyyy-MM-dd')
      </if>
        where exists (
          select 1   from ghouse_contr b where b.service_num=#{serviceNum} and b.is_final=0
          and c.contract_no = b.contract_no
        )
        and  c.is_final=1 and c.is_deleted=0 and c.contract_status='EXAMINING'
  </update>

  <select id="selectLinkFileDto" resultType="com.funi.platform.lshc.dto.LinkFileDto">
      select c.id as contractId,l.id as lesseeId  from ghouse_contr  c
      inner join ghouse_lessee l on c.lessee_id = l.id
      where c.is_final=#{isFinal} and l.is_final=#{isFinal} and c.service_num=#{serviceNum}
        and c.is_deleted=0 and l.is_deleted=0
  </select>

    <update id="remove" >
        update ghouse_contr c set c.is_deleted=1
        where exists (
          select 1   from ghouse_contr b where b.service_num=#{serviceNum} and b.is_final=1
          and c.contract_no = b.contract_no
        )
        and  c.is_final=1 and c.is_deleted=0 and c.contract_status='EXAMINING'
    </update>

    <update id="overdue">
        update  ghouse_contr set contract_status='OVERDUE'
        where  contract_status='VALID' AND is_deleted=0 and is_final=1 and
        to_date(rent_end_date,'yyyy-MM-dd')+1 <![CDATA[<]]> sysdate
    </update>
    


</mapper>