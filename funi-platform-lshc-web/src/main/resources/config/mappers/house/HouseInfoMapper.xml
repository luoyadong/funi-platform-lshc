<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.funi.platform.lshc.mapper.house.HouseInfoMapper">
  <resultMap id="BaseResultMap" type="com.funi.platform.lshc.entity.house.HouseInfo">
    <id column="ID" jdbcType="VARCHAR" property="id" />
    <result column="HOURSE_NO_PREFIX" jdbcType="VARCHAR" property="hourseNoPrefix" />
    <result column="HOUSE_NO_SYS" jdbcType="VARCHAR" property="houseNoSys" />
    <result column="HOUSE_NO" jdbcType="VARCHAR" property="houseNo" />
    <result column="ADDRESS_ID" jdbcType="VARCHAR" property="addressId" />
    <result column="ADDRESS_BUILDING" jdbcType="VARCHAR" property="addressBuilding" />
    <result column="ADDRESS_UNIT" jdbcType="VARCHAR" property="addressUnit" />
    <result column="ADDRESS_FLOOR" jdbcType="VARCHAR" property="addressFloor" />
    <result column="ADDRESS_ROOM_NO" jdbcType="VARCHAR" property="addressRoomNo" />
    <result column="HOUSE_SOURCE" jdbcType="CHAR" property="houseSource" />
    <result column="EXCHANGE_HOURSE_NO" jdbcType="VARCHAR" property="exchangeHourseNo" />
    <result column="SOURCE_UNIT" jdbcType="VARCHAR" property="sourceUnit" />
    <result column="TRANSFER_DATE" jdbcType="CHAR" property="transferDate" />
    <result column="TRANSFER_BATCH" jdbcType="VARCHAR" property="transferBatch" />
    <result column="BULID_AREA" jdbcType="DECIMAL" property="bulidArea" />
    <result column="STEPS_AREA" jdbcType="DECIMAL" property="stepsArea" />
    <result column="RENT_AREA" jdbcType="DECIMAL" property="rentArea" />
    <result column="NON_RENT_AREA" jdbcType="DECIMAL" property="nonRentArea" />
    <result column="INNER_AREA" jdbcType="DECIMAL" property="innerArea" />
    <result column="POOL_AREA" jdbcType="DECIMAL" property="poolArea" />
    <result column="BEDROOM_QUANTITY" jdbcType="DECIMAL" property="bedroomQuantity" />
    <result column="LIVINGROOM_QUANTITY" jdbcType="DECIMAL" property="livingroomQuantity" />
    <result column="BATHROOM_QUANTITY" jdbcType="DECIMAL" property="bathroomQuantity" />
    <result column="EVALUATE_PRICE" jdbcType="DECIMAL" property="evaluatePrice" />
    <result column="EVALUATE_DATE" jdbcType="CHAR" property="evaluateDate" />
    <result column="BUILD_STRUCTURE" jdbcType="CHAR" property="buildStructure" />
    <result column="HOURSE_USE_TYPE" jdbcType="CHAR" property="hourseUseType" />
    <result column="MANAGE_TYPE" jdbcType="CHAR" property="manageType" />
    <result column="FINSH_DATE" jdbcType="CHAR" property="finshDate" />
    <result column="SAFETY_LEVEL" jdbcType="CHAR" property="safetyLevel" />
    <result column="HOUSE_STATUS" jdbcType="VARCHAR" property="houseStatus" />
    <result column="HOUSE_REMARK" jdbcType="VARCHAR" property="houseRemark" />
    <result column="HAS_PROPERTY" jdbcType="DECIMAL" property="hasProperty" />
    <result column="IS_VACANT" jdbcType="DECIMAL" property="isVacant" />
    <result column="CREATE_UNIT_ID" jdbcType="VARCHAR" property="createUnitId" />
    <result column="IS_DELETED" jdbcType="DECIMAL" property="isDeleted" />
    <result column="RENT_STATUS" property="rentStatus"/>
    <result column="VERSION" jdbcType="DECIMAL" property="version" />
    <result column="SYS_CREATE_TIME" jdbcType="TIMESTAMP" property="sysCreateTime" />
    <result column="SYS_UPDATE_TIME" jdbcType="TIMESTAMP" property="sysUpdateTime" />
    <result column="SYS_DELETE_TIME" jdbcType="TIMESTAMP" property="sysDeleteTime" />
    <result column="SYS_CREATE_ID" jdbcType="VARCHAR" property="sysCreateId" />
    <result column="SYS_UPDATE_ID" jdbcType="VARCHAR" property="sysUpdateId" />
    <result column="SYS_DELETE_ID" jdbcType="VARCHAR" property="sysDeleteId" />
    <result column="PUBLIC_BUILT_AREA" jdbcType="DECIMAL" property="publicBuiltArea" />
    <result column="UN_ADD_BUILT_AREA" jdbcType="DECIMAL" property="unAddBuiltArea" />
    <result column="ADD_BUILT_AREA" jdbcType="DECIMAL" property="addBuiltArea" />
    <result column="HOUSE_KEEPER" property="HouseKeeper"/>
  </resultMap>
  <resultMap id="resultMap" type="com.funi.platform.lshc.vo.HouseVo" extends="BaseResultMap">
    <result column="regionName" jdbcType="VARCHAR" property="regionName" />
    <result column="LIVING_AREA_NAME" property="livingAreaName"/>
    <result column="street_name" property="houseAddress"/>
    <result column="housePropertyId" property="housePropertyId"/>
    <result column="houseArchivesId" property="houseArchivesId"/>

    <result column="lessee_name" property="renter"/>
    <result column="personal_tel" property="sellerPhone"/>
    <result column="organization_name" property="organizationName"/>
      <result column="org_name" property="manageOrg"/>
    <result column="houseRommNo" property="houseRommNo"/>
  </resultMap>
  <sql id="Base_Column_List">
    ID, HOURSE_NO_PREFIX, HOUSE_NO_SYS, HOUSE_NO, ADDRESS_ID, ADDRESS_BUILDING, ADDRESS_UNIT, 
    ADDRESS_FLOOR, ADDRESS_ROOM_NO, HOUSE_SOURCE, EXCHANGE_HOURSE_NO, SOURCE_UNIT, TRANSFER_DATE, 
    TRANSFER_BATCH, BULID_AREA, STEPS_AREA, RENT_AREA, NON_RENT_AREA, INNER_AREA, POOL_AREA, 
    BEDROOM_QUANTITY, LIVINGROOM_QUANTITY, BATHROOM_QUANTITY, EVALUATE_PRICE, EVALUATE_DATE, 
    BUILD_STRUCTURE, HOURSE_USE_TYPE, MANAGE_TYPE, FINSH_DATE, SAFETY_LEVEL, HOUSE_STATUS, 
    HOUSE_REMARK, HAS_PROPERTY, IS_VACANT, CREATE_UNIT_ID, IS_DELETED, VERSION, SYS_CREATE_TIME,
    SYS_UPDATE_TIME, SYS_DELETE_TIME, SYS_CREATE_ID, SYS_UPDATE_ID, SYS_DELETE_ID
    ,PUBLIC_BUILT_AREA,UN_ADD_BUILT_AREA,ADD_BUILT_AREA,HOUSE_KEEPER
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from GHOUSE_HOUSE_INFO
    where ID = #{id,jdbcType=VARCHAR}
  </select>

  <select id="selectHouseSysNo" parameterType="java.lang.String" resultMap="resultMap">
   select ch.*,t2.NAME as regionName,ca.LIVING_AREA_NAME,t2.NAME||ca.street_name||ca.street_no as street_name,gh.id as housePropertyId,ga.id as houseArchivesId,co.org_name, t.organization_name,t.lessee_name,t.personal_tel

      from
     GHOUSE_HOUSE_INFO ch
     left join GHOUSE_ADDR_INFO ca on ca.id=ch.address_id
     LEFT JOIN A1_D t2 ON ca.ZONE_ID = t2.REGION_CODE
     left join GHOUSE_HOUSE_PROPERTY gh on gh.house_id=ch.id
     left join GHOUSE_HOUSE_ARCHIVES ga on ga.house_id=ch.id
      left join cf_organization co on co.ORG_CODE=ch.CREATE_UNIT_ID
      left join
      ( select
      distinct
      c.id,c.contract_no,c.rent_start_date,c.rent_end_date,c.rental_payto_date,c.contract_invalid_date,
      c.contract_invalid_reason,c.rent_area,c.rental_month_amount,c.service_num,c.contract_status,
      l.organization_name,l.organization_contract,l.organization_tel,l.lessee_name,l.unique_id,l.personal_tel,
      count(ch.id) over(partition by c.id) as houseNum,gi.house_id
      from ghouse_contr c
      inner join ghouse_lessee l on c.lessee_id = l.id
      inner join ghouse_contr_house ch on  c.id = ch.contr_id
      join GHOUSE_CONTR_HOUSE gi on gi.CONTR_ID=c.id

      where c.is_deleted=0 and l.is_deleted=0 and ch.is_deleted=0  and c.is_final=1 and c.contract_status='VALID') t
      on t.house_id=ch.id
    <where>

      <if test="id != null and id != ''">
        and ch.id=#{id}
      </if>
      <if test="keyword != null and keyword != ''">
        and (ch.HOUSE_NO like '%' || #{keyword} || '%' )
      </if>

    </where>
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from GHOUSE_HOUSE_INFO
    where ID = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.funi.platform.lshc.entity.house.HouseInfo">
    insert into GHOUSE_HOUSE_INFO (ID, HOURSE_NO_PREFIX, HOUSE_NO_SYS, HOUSE_NO,
      ADDRESS_ID, ADDRESS_BUILDING, ADDRESS_UNIT, 
      ADDRESS_FLOOR, ADDRESS_ROOM_NO, HOUSE_SOURCE, 
      EXCHANGE_HOURSE_NO, SOURCE_UNIT, TRANSFER_DATE, 
      TRANSFER_BATCH, BULID_AREA, STEPS_AREA, 
      RENT_AREA, NON_RENT_AREA, INNER_AREA, 
      POOL_AREA, BEDROOM_QUANTITY, LIVINGROOM_QUANTITY, 
      BATHROOM_QUANTITY, EVALUATE_PRICE, EVALUATE_DATE, 
      BUILD_STRUCTURE, HOURSE_USE_TYPE, MANAGE_TYPE, 
      FINSH_DATE, SAFETY_LEVEL, HOUSE_STATUS, 
      HOUSE_REMARK, HAS_PROPERTY, IS_VACANT,
      CREATE_UNIT_ID, IS_DELETED, VERSION, 
      SYS_CREATE_TIME, SYS_UPDATE_TIME, SYS_DELETE_TIME, 
      SYS_CREATE_ID, SYS_UPDATE_ID, SYS_DELETE_ID,PUBLIC_BUILT_AREA,UN_ADD_BUILT_AREA,ADD_BUILT_AREA,HOUSE_KEEPER
      )
    values (#{id,jdbcType=VARCHAR}, #{hourseNoPrefix,jdbcType=VARCHAR}, #{houseNoSys,jdbcType=VARCHAR}, #{houseNo,jdbcType=VARCHAR},
      #{addressId,jdbcType=VARCHAR}, #{addressBuilding,jdbcType=VARCHAR}, #{addressUnit,jdbcType=VARCHAR}, 
      #{addressFloor,jdbcType=VARCHAR}, #{addressRoomNo,jdbcType=VARCHAR}, #{houseSource,jdbcType=CHAR}, 
      #{exchangeHourseNo,jdbcType=VARCHAR}, #{sourceUnit,jdbcType=VARCHAR}, #{transferDate,jdbcType=CHAR}, 
      #{transferBatch,jdbcType=VARCHAR}, #{bulidArea,jdbcType=DECIMAL}, #{stepsArea,jdbcType=DECIMAL}, 
      #{rentArea,jdbcType=DECIMAL}, #{nonRentArea,jdbcType=DECIMAL}, #{innerArea,jdbcType=DECIMAL}, 
      #{poolArea,jdbcType=DECIMAL}, #{bedroomQuantity,jdbcType=DECIMAL}, #{livingroomQuantity,jdbcType=DECIMAL}, 
      #{bathroomQuantity,jdbcType=DECIMAL}, #{evaluatePrice,jdbcType=DECIMAL}, #{evaluateDate,jdbcType=CHAR}, 
      #{buildStructure,jdbcType=CHAR}, #{hourseUseType,jdbcType=CHAR}, #{manageType,jdbcType=CHAR}, 
      #{finshDate,jdbcType=CHAR}, #{safetyLevel,jdbcType=CHAR}, #{houseStatus,jdbcType=VARCHAR}, 
      #{houseRemark,jdbcType=VARCHAR}, #{hasProperty,jdbcType=CHAR}, #{isVacant,jdbcType=DECIMAL},
      #{createUnitId,jdbcType=VARCHAR}, #{isDeleted,jdbcType=DECIMAL}, #{version,jdbcType=DECIMAL}, 
      #{sysCreateTime,jdbcType=TIMESTAMP}, #{sysUpdateTime,jdbcType=TIMESTAMP}, #{sysDeleteTime,jdbcType=TIMESTAMP}, 
      #{sysCreateId,jdbcType=VARCHAR}, #{sysUpdateId,jdbcType=VARCHAR}, #{sysDeleteId,jdbcType=VARCHAR}
      ,#{publicBuiltArea,jdbcType=VARCHAR},#{unAddBuiltArea,jdbcType=VARCHAR},#{addBuiltArea,jdbcType=VARCHAR},#{HouseKeeper})
  </insert>
  <insert id="insertSelective" parameterType="com.funi.platform.lshc.entity.house.HouseInfo">
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.String">
      SELECT sys_guid() FROM DUAL
    </selectKey>
    insert into GHOUSE_HOUSE_INFO
    <trim prefix="(" suffix=")" suffixOverrides=",">
      ID,
      <if test="hourseNoPrefix != null">
        HOURSE_NO_PREFIX,
      </if>
      <if test="houseNoSys != null">
        HOUSE_NO_SYS,
      </if>
      <if test="houseNo != null">
        HOUSE_NO,
      </if>
      <if test="addressId != null">
        ADDRESS_ID,
      </if>
      <if test="addressBuilding != null">
        ADDRESS_BUILDING,
      </if>
      <if test="addressUnit != null">
        ADDRESS_UNIT,
      </if>
      <if test="addressFloor != null">
        ADDRESS_FLOOR,
      </if>
      <if test="addressRoomNo != null">
        ADDRESS_ROOM_NO,
      </if>
      <if test="houseSource != null">
        HOUSE_SOURCE,
      </if>
      <if test="exchangeHourseNo != null">
        EXCHANGE_HOURSE_NO,
      </if>
      <if test="sourceUnit != null">
        SOURCE_UNIT,
      </if>
      <if test="transferDate != null">
        TRANSFER_DATE,
      </if>
      <if test="transferBatch != null">
        TRANSFER_BATCH,
      </if>
      <if test="bulidArea != null">
        BULID_AREA,
      </if>
      <if test="stepsArea != null">
        STEPS_AREA,
      </if>
      <if test="rentArea != null">
        RENT_AREA,
      </if>
      <if test="nonRentArea != null">
        NON_RENT_AREA,
      </if>
      <if test="innerArea != null">
        INNER_AREA,
      </if>
      <if test="poolArea != null">
        POOL_AREA,
      </if>
      <if test="bedroomQuantity != null">
        BEDROOM_QUANTITY,
      </if>
      <if test="livingroomQuantity != null">
        LIVINGROOM_QUANTITY,
      </if>
      <if test="bathroomQuantity != null">
        BATHROOM_QUANTITY,
      </if>
      <if test="evaluatePrice != null">
        EVALUATE_PRICE,
      </if>
      <if test="evaluateDate != null">
        EVALUATE_DATE,
      </if>
      <if test="buildStructure != null">
        BUILD_STRUCTURE,
      </if>
      <if test="hourseUseType != null">
        HOURSE_USE_TYPE,
      </if>
      <if test="manageType != null">
        MANAGE_TYPE,
      </if>
      <if test="finshDate != null">
        FINSH_DATE,
      </if>
      <if test="safetyLevel != null">
        SAFETY_LEVEL,
      </if>
      <if test="houseStatus != null">
        HOUSE_STATUS,
      </if>
      <if test="houseRemark != null">
        HOUSE_REMARK,
      </if>
      <if test="hasProperty != null">
        HAS_PROPERTY,
      </if>
      <if test="isVacant != null">
        IS_VACANT,
      </if>
      <if test="createUnitId != null">
        CREATE_UNIT_ID,
      </if>
      <if test="isDeleted != null">
        IS_DELETED,
      </if>
      <if test="version != null">
        VERSION,
      </if>
      <if test="sysCreateTime != null">
        SYS_CREATE_TIME,
      </if>
      <if test="sysUpdateTime != null">
        SYS_UPDATE_TIME,
      </if>
      <if test="sysDeleteTime != null">
        SYS_DELETE_TIME,
      </if>
      <if test="sysCreateId != null">
        SYS_CREATE_ID,
      </if>
      <if test="sysUpdateId != null">
        SYS_UPDATE_ID,
      </if>
      <if test="sysDeleteId != null">
        SYS_DELETE_ID,
      </if>
      <if test="publicBuiltArea != null">
        PUBLIC_BUILT_AREA,
      </if>
      <if test="unAddBuiltArea != null">
        UN_ADD_BUILT_AREA,
      </if>
      <if test="addBuiltArea != null">
        ADD_BUILT_AREA,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      #{id,jdbcType=VARCHAR},
      <if test="hourseNoPrefix != null">
        #{hourseNoPrefix,jdbcType=VARCHAR},
      </if>
      <if test="houseNoSys != null">
        #{houseNoSys,jdbcType=VARCHAR},
      </if>
      <if test="houseNo != null">
        #{houseNo,jdbcType=VARCHAR},
      </if>
      <if test="addressId != null">
        #{addressId,jdbcType=VARCHAR},
      </if>
      <if test="addressBuilding != null">
        #{addressBuilding,jdbcType=VARCHAR},
      </if>
      <if test="addressUnit != null">
        #{addressUnit,jdbcType=VARCHAR},
      </if>
      <if test="addressFloor != null">
        #{addressFloor,jdbcType=VARCHAR},
      </if>
      <if test="addressRoomNo != null">
        #{addressRoomNo,jdbcType=VARCHAR},
      </if>
      <if test="houseSource != null">
        #{houseSource,jdbcType=CHAR},
      </if>
      <if test="exchangeHourseNo != null">
        #{exchangeHourseNo,jdbcType=VARCHAR},
      </if>
      <if test="sourceUnit != null">
        #{sourceUnit,jdbcType=VARCHAR},
      </if>
      <if test="transferDate != null">
        #{transferDate,jdbcType=CHAR},
      </if>
      <if test="transferBatch != null">
        #{transferBatch,jdbcType=VARCHAR},
      </if>
      <if test="bulidArea != null">
        #{bulidArea,jdbcType=DECIMAL},
      </if>
      <if test="stepsArea != null">
        #{stepsArea,jdbcType=DECIMAL},
      </if>
      <if test="rentArea != null">
        #{rentArea,jdbcType=DECIMAL},
      </if>
      <if test="nonRentArea != null">
        #{nonRentArea,jdbcType=DECIMAL},
      </if>
      <if test="innerArea != null">
        #{innerArea,jdbcType=DECIMAL},
      </if>
      <if test="poolArea != null">
        #{poolArea,jdbcType=DECIMAL},
      </if>
      <if test="bedroomQuantity != null">
        #{bedroomQuantity,jdbcType=DECIMAL},
      </if>
      <if test="livingroomQuantity != null">
        #{livingroomQuantity,jdbcType=DECIMAL},
      </if>
      <if test="bathroomQuantity != null">
        #{bathroomQuantity,jdbcType=DECIMAL},
      </if>
      <if test="evaluatePrice != null">
        #{evaluatePrice,jdbcType=DECIMAL},
      </if>
      <if test="evaluateDate != null">
        #{evaluateDate,jdbcType=CHAR},
      </if>
      <if test="buildStructure != null">
        #{buildStructure,jdbcType=CHAR},
      </if>
      <if test="hourseUseType != null">
        #{hourseUseType,jdbcType=CHAR},
      </if>
      <if test="manageType != null">
        #{manageType,jdbcType=CHAR},
      </if>
      <if test="finshDate != null">
        #{finshDate,jdbcType=CHAR},
      </if>
      <if test="safetyLevel != null">
        #{safetyLevel,jdbcType=CHAR},
      </if>
      <if test="houseStatus != null">
        #{houseStatus,jdbcType=VARCHAR},
      </if>
      <if test="houseRemark != null">
        #{houseRemark,jdbcType=VARCHAR},
      </if>
      <if test="hasProperty != null">
        #{hasProperty,jdbcType=CHAR},
      </if>
      <if test="isVacant != null">
        #{isVacant,jdbcType=DECIMAL},
      </if>
      <if test="createUnitId != null">
        #{createUnitId,jdbcType=VARCHAR},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=DECIMAL},
      </if>
      <if test="version != null">
        #{version,jdbcType=DECIMAL},
      </if>
      <if test="sysCreateTime != null">
        #{sysCreateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sysUpdateTime != null">
        #{sysUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sysDeleteTime != null">
        #{sysDeleteTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sysCreateId != null">
        #{sysCreateId,jdbcType=VARCHAR},
      </if>
      <if test="sysUpdateId != null">
        #{sysUpdateId,jdbcType=VARCHAR},
      </if>
      <if test="sysDeleteId != null">
        #{sysDeleteId,jdbcType=VARCHAR},
      </if>
      <if test="publicBuiltArea != null">
        #{publicBuiltArea,jdbcType=VARCHAR},
      </if>
      <if test="unAddBuiltArea != null">
        #{unAddBuiltArea,jdbcType=VARCHAR},
      </if>
      <if test="addBuiltArea != null">
        #{addBuiltArea,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.funi.platform.lshc.entity.house.HouseInfo">
    update GHOUSE_HOUSE_INFO
    <set>
      <if test="hourseNoPrefix != null">
        HOURSE_NO_PREFIX = #{hourseNoPrefix,jdbcType=VARCHAR},
      </if>
      <if test="houseNoSys != null">
        HOUSE_NO_SYS = #{houseNoSys,jdbcType=VARCHAR},
      </if>
      <if test="houseNo != null">
        HOUSE_NO = #{houseNo,jdbcType=VARCHAR},
      </if>
      <if test="addressId != null">
        ADDRESS_ID = #{addressId,jdbcType=VARCHAR},
      </if>
      <if test="addressBuilding != null">
        ADDRESS_BUILDING = #{addressBuilding,jdbcType=VARCHAR},
      </if>
      <if test="addressUnit != null">
        ADDRESS_UNIT = #{addressUnit,jdbcType=VARCHAR},
      </if>
      <if test="addressFloor != null">
        ADDRESS_FLOOR = #{addressFloor,jdbcType=VARCHAR},
      </if>
      <if test="addressRoomNo != null">
        ADDRESS_ROOM_NO = #{addressRoomNo,jdbcType=VARCHAR},
      </if>
      <if test="houseSource != null">
        HOUSE_SOURCE = #{houseSource,jdbcType=CHAR},
      </if>
      <if test="exchangeHourseNo != null">
        EXCHANGE_HOURSE_NO = #{exchangeHourseNo,jdbcType=VARCHAR},
      </if>
      <if test="sourceUnit != null">
        SOURCE_UNIT = #{sourceUnit,jdbcType=VARCHAR},
      </if>
      <if test="transferDate != null">
        TRANSFER_DATE = #{transferDate,jdbcType=CHAR},
      </if>
      <if test="transferBatch != null">
        TRANSFER_BATCH = #{transferBatch,jdbcType=VARCHAR},
      </if>
      <if test="bulidArea != null">
        BULID_AREA = #{bulidArea,jdbcType=DECIMAL},
      </if>
      <if test="stepsArea != null">
        STEPS_AREA = #{stepsArea,jdbcType=DECIMAL},
      </if>
      <if test="rentArea != null">
        RENT_AREA = #{rentArea,jdbcType=DECIMAL},
      </if>
      <if test="nonRentArea != null">
        NON_RENT_AREA = #{nonRentArea,jdbcType=DECIMAL},
      </if>
      <if test="innerArea != null">
        INNER_AREA = #{innerArea,jdbcType=DECIMAL},
      </if>
      <if test="poolArea != null">
        POOL_AREA = #{poolArea,jdbcType=DECIMAL},
      </if>
      <if test="bedroomQuantity != null">
        BEDROOM_QUANTITY = #{bedroomQuantity,jdbcType=DECIMAL},
      </if>
      <if test="livingroomQuantity != null">
        LIVINGROOM_QUANTITY = #{livingroomQuantity,jdbcType=DECIMAL},
      </if>
      <if test="bathroomQuantity != null">
        BATHROOM_QUANTITY = #{bathroomQuantity,jdbcType=DECIMAL},
      </if>
      <if test="evaluatePrice != null">
        EVALUATE_PRICE = #{evaluatePrice,jdbcType=DECIMAL},
      </if>
      <if test="evaluateDate != null">
        EVALUATE_DATE = #{evaluateDate,jdbcType=CHAR},
      </if>
      <if test="buildStructure != null">
        BUILD_STRUCTURE = #{buildStructure,jdbcType=CHAR},
      </if>
      <if test="hourseUseType != null">
        HOURSE_USE_TYPE = #{hourseUseType,jdbcType=CHAR},
      </if>
      <if test="manageType != null">
        MANAGE_TYPE = #{manageType,jdbcType=CHAR},
      </if>
      <if test="finshDate != null">
        FINSH_DATE = #{finshDate,jdbcType=CHAR},
      </if>
      <if test="safetyLevel != null">
        SAFETY_LEVEL = #{safetyLevel,jdbcType=CHAR},
      </if>
      <if test="houseStatus != null">
        HOUSE_STATUS = #{houseStatus,jdbcType=VARCHAR},
      </if>
      <if test="houseRemark != null">
        HOUSE_REMARK = #{houseRemark,jdbcType=VARCHAR},
      </if>
      <if test="hasProperty != null">
        HAS_PROPERTY = #{hasProperty,jdbcType=CHAR},
      </if>
      <if test="isVacant != null">
        IS_VACANT = #{isVacant,jdbcType=DECIMAL},
      </if>
      <if test="createUnitId != null">
        CREATE_UNIT_ID = #{createUnitId,jdbcType=VARCHAR},
      </if>
      <if test="isDeleted != null">
        IS_DELETED = #{isDeleted,jdbcType=DECIMAL},
      </if>
      <if test="version != null">
        VERSION = #{version,jdbcType=DECIMAL},
      </if>
      <if test="sysCreateTime != null">
        SYS_CREATE_TIME = #{sysCreateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sysUpdateTime != null">
        SYS_UPDATE_TIME = #{sysUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sysDeleteTime != null">
        SYS_DELETE_TIME = #{sysDeleteTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sysCreateId != null">
        SYS_CREATE_ID = #{sysCreateId,jdbcType=VARCHAR},
      </if>
      <if test="sysUpdateId != null">
        SYS_UPDATE_ID = #{sysUpdateId,jdbcType=VARCHAR},
      </if>
      <if test="sysDeleteId != null">
        SYS_DELETE_ID = #{sysDeleteId,jdbcType=VARCHAR},
      </if>
      <if test="publicBuiltArea != null">
        PUBLIC_BUILT_AREA = #{publicBuiltArea,jdbcType=VARCHAR},
      </if>
      <if test="unAddBuiltArea != null">
        UN_ADD_BUILT_AREA = #{unAddBuiltArea,jdbcType=VARCHAR},
      </if>
      <if test="addBuiltArea != null">
        ADD_BUILT_AREA = #{addBuiltArea,jdbcType=VARCHAR},
      </if>
     <if test="HouseKeeper != null">
         HOUSE_KEEPER = #{HouseKeeper,jdbcType=VARCHAR},
     </if>
    </set>
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateHouseStatus" parameterType="java.lang.String">
     update GHOUSE_HOUSE_INFO
    set HOUSE_STATUS = #{status,jdbcType=VARCHAR}
        where ID = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.funi.platform.lshc.entity.house.HouseInfo">
    update GHOUSE_HOUSE_INFO
    set HOURSE_NO_PREFIX = #{hourseNoPrefix,jdbcType=VARCHAR},
      HOUSE_NO_SYS = #{houseNoSys,jdbcType=VARCHAR},
      HOUSE_NO = #{houseNo,jdbcType=VARCHAR},
      ADDRESS_ID = #{addressId,jdbcType=VARCHAR},
      ADDRESS_BUILDING = #{addressBuilding,jdbcType=VARCHAR},
      ADDRESS_UNIT = #{addressUnit,jdbcType=VARCHAR},
      ADDRESS_FLOOR = #{addressFloor,jdbcType=VARCHAR},
      ADDRESS_ROOM_NO = #{addressRoomNo,jdbcType=VARCHAR},
      HOUSE_SOURCE = #{houseSource,jdbcType=CHAR},
      EXCHANGE_HOURSE_NO = #{exchangeHourseNo,jdbcType=VARCHAR},
      SOURCE_UNIT = #{sourceUnit,jdbcType=VARCHAR},
      TRANSFER_DATE = #{transferDate,jdbcType=CHAR},
      TRANSFER_BATCH = #{transferBatch,jdbcType=VARCHAR},
      BULID_AREA = #{bulidArea,jdbcType=DECIMAL},
      STEPS_AREA = #{stepsArea,jdbcType=DECIMAL},
      RENT_AREA = #{rentArea,jdbcType=DECIMAL},
      NON_RENT_AREA = #{nonRentArea,jdbcType=DECIMAL},
      INNER_AREA = #{innerArea,jdbcType=DECIMAL},
      POOL_AREA = #{poolArea,jdbcType=DECIMAL},
      BEDROOM_QUANTITY = #{bedroomQuantity,jdbcType=DECIMAL},
      LIVINGROOM_QUANTITY = #{livingroomQuantity,jdbcType=DECIMAL},
      BATHROOM_QUANTITY = #{bathroomQuantity,jdbcType=DECIMAL},
      EVALUATE_PRICE = #{evaluatePrice,jdbcType=DECIMAL},
      EVALUATE_DATE = #{evaluateDate,jdbcType=CHAR},
      BUILD_STRUCTURE = #{buildStructure,jdbcType=CHAR},
      HOURSE_USE_TYPE = #{hourseUseType,jdbcType=CHAR},
      MANAGE_TYPE = #{manageType,jdbcType=CHAR},
      FINSH_DATE = #{finshDate,jdbcType=CHAR},
      SAFETY_LEVEL = #{safetyLevel,jdbcType=CHAR},
      HOUSE_STATUS = #{houseStatus,jdbcType=VARCHAR},
      HOUSE_REMARK = #{houseRemark,jdbcType=VARCHAR},
      HAS_PROPERTY = #{hasProperty,jdbcType=CHAR},
      IS_VACANT = #{isVacant,jdbcType=DECIMAL},
      CREATE_UNIT_ID = #{createUnitId,jdbcType=VARCHAR},
      IS_DELETED = #{isDeleted,jdbcType=DECIMAL},
      VERSION = #{version,jdbcType=DECIMAL},
      SYS_CREATE_TIME = #{sysCreateTime,jdbcType=TIMESTAMP},
      SYS_UPDATE_TIME = #{sysUpdateTime,jdbcType=TIMESTAMP},
      SYS_DELETE_TIME = #{sysDeleteTime,jdbcType=TIMESTAMP},
      SYS_CREATE_ID = #{sysCreateId,jdbcType=VARCHAR},
      SYS_UPDATE_ID = #{sysUpdateId,jdbcType=VARCHAR},
      SYS_DELETE_ID = #{sysDeleteId,jdbcType=VARCHAR},
      PUBLIC_BUILT_AREA = #{publicBuiltArea,jdbcType=VARCHAR},
      UN_ADD_BUILT_AREA = #{unAddBuiltArea,jdbcType=VARCHAR},
      ADD_BUILT_AREA = #{addBuiltArea,jdbcType=VARCHAR},
      HOUSE_KEEPER = #{HouseKeeper,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=VARCHAR}
  </update>

  <select id="selectByQuery" resultType="com.funi.platform.lshc.dto.HouseDto">
      select
        hou.id as houseId,hou.house_no as houseNo,region.name as regionName,ai.living_area_name as village ,
    hou.address_building addressBuilding,hou.address_unit addressUnit,hou.address_floor addressFloor,hou.address_room_no  addressRoomNo,
    hou.build_structure buildStructure,
        nvl2(hou.address_building,hou.address_building||'栋','') ||
        nvl2(hou.address_building,hou.address_unit||'单元','')   ||
        nvl2(hou.address_building,hou.address_floor||'层','')    ||
        nvl2(hou.address_building,hou.address_room_no||'号','')  as houseCode,
        ai.address_detail as address,hou.bulid_area as houseArea,hou.rent_area as rentArea,
        nvl2(hou.address_building,hou.bedroom_quantity||'室','')    ||
        nvl2(hou.address_building,hou.livingroom_quantity||'厅','')    ||
        nvl2(hou.address_building,hou.bathroom_quantity||'卫','')    as huxing,
        o.org_name as manageOrganization ,hou.manage_type as manageType,
        hou.hourse_use_type as houseUseType,hou.evaluate_price evaluatePrice
      from ghouse_house_info  hou
      inner join ghouse_addr_info ai on hou.address_id = ai.id
      inner join A1_D region ON ai.ZONE_ID = region.REGION_CODE
      inner join cf_organization o on hou.create_unit_id = o.org_code
      where hou.is_deleted=0 and o.is_deleted=0  and hou.rent_status=0
      <if test="regionCode!=null">
        and  region.region_code=#{regionCode}
      </if>
      <if test="manageOrganizationId!=null">
         and hou.create_unit_id=#{manageOrganizationId}
      </if>
      <if test="villageId!=null">
        and ai.id=#{villageId}
      </if>
      <if test="keyword!=null">
         and ( ai.street_name like '%' || #{keyword} || '%')
      </if>
    <if test="houseNo!=null">
      and hou.house_no=#{houseNo}
    </if>

  </select>

  <select id="selectHouseList"  resultMap="resultMap" parameterType="com.funi.platform.lshc.query.HouseListQuery">
   select ch.*,t2.NAME as regionName,ca.LIVING_AREA_NAME,t2.NAME||ca.street_name||ca.street_no as street_name,gh.id as housePropertyId,ga.id as houseArchivesId ,
    t.organization_name,t.lessee_name,t.personal_tel,co.org_name,ch.ADDRESS_BUILDING||'栋'||ch.ADDRESS_UNIT||'单元'||ch.ADDRESS_FLOOR||'层'||ch.ADDRESS_ROOM_NO||'号' as houseRommNo

    from
     GHOUSE_HOUSE_INFO ch
     left join GHOUSE_ADDR_INFO ca on ca.id=ch.address_id
     LEFT JOIN A1_D t2 ON ca.ZONE_ID = t2.region_code
     left join GHOUSE_HOUSE_PROPERTY gh on gh.house_id=ch.id
     left join GHOUSE_HOUSE_ARCHIVES ga on ga.house_id=ch.id
      left join cf_organization co on co.ORG_CODE=ch.CREATE_UNIT_ID
    left join
    ( select
    distinct
    c.id,c.contract_no,c.rent_start_date,c.rent_end_date,c.rental_payto_date,c.contract_invalid_date,
    c.contract_invalid_reason,c.rent_area,c.rental_month_amount,c.service_num,c.contract_status,
    l.organization_name,l.organization_contract,l.organization_tel,l.lessee_name,l.unique_id,l.personal_tel,
    count(ch.id) over(partition by c.id) as houseNum,gi.house_id
    from ghouse_contr c
    inner join ghouse_lessee l on c.lessee_id = l.id
    inner join ghouse_contr_house ch on  c.id = ch.contr_id
    join GHOUSE_CONTR_HOUSE gi on gi.CONTR_ID=c.id

    where c.is_deleted=0 and l.is_deleted=0 and ch.is_deleted=0  and c.is_final=1 and c.contract_status='VALID') t
    on t.house_id=ch.id
     where 1=1
    <if test="authorityList != null and authorityList.size > 0">
      and ch.create_unit_id in
      <foreach collection="authorityList" index="idx" item="authority" open="(" close=")" separator=",">
        #{authority.dm}
      </foreach>
    </if>
    <if test="userId != null and userId != ''">
      and ch.SYS_CREATE_ID=#{userId}
    </if>
    <if test="hourseUseType!=null and hourseUseType!=''">
      and  ch.HOURSE_USE_TYPE=#{hourseUseType}
    </if>
    <if test="safetyLevel!=null and safetyLevel!=''">
      and  ch.SAFETY_LEVEL=#{safetyLevel}
    </if>
    <if test="manageType!=null and manageType!=''">
      and  ch.MANAGE_TYPE=#{manageType}
    </if>
    <if test="regionCode!=null and regionCode!=''">
      and t2.REGION_CODE=#{regionCode}
    </if>
    <if test="houseStatus!=null and houseStatus!=''">
      and ch.HOUSE_STATUS=#{houseStatus}
    </if>
    <if test="hasProperty!=null and hasProperty!=''">
      and ch.HAS_PROPERTY=#{hasProperty}
    </if>
    <if test="isVacant!=null and isVacant!=''">
      and ch.RENT_STATUS=#{isVacant}
    </if>
    <if test="manaageOrg!=null and manaageOrg!=''">
      and ch.CREATE_UNIT_ID=#{manaageOrg}
    </if>
    <if test="searchContent!=null and searchContent!=''">
      and ca.LIVING_AREA_NAME||ca.street_name||ch.HOUSE_NO||ch.ADDRESS_ROOM_NO||t.lessee_name like '%' || #{searchContent} || '%'
    </if>



    order by ch.sys_create_time desc,ch.sys_update_time desc
  </select>
  <select id="selectHouseExcelList" resultType="com.funi.platform.lshc.vo.ExcelHouseVo" parameterType="com.funi.platform.lshc.query.HouseListExcel">
    select ch.HOUSE_NO as houseNoSys,
    ca.LIVING_AREA_NAME as livingAreaName,
    ch.ADDRESS_ROOM_NO as addressRoomNo,
    t2.NAME||ca.street_name||ca.street_no  as houseAddress,
    ch.BEDROOM_QUANTITY||'室'||ch.LIVINGROOM_QUANTITY||'厅'||ch.BATHROOM_QUANTITY||'卫' as houseRomm,
    ch.HOURSE_USE_TYPE as hourseUseType,
    ch.MANAGE_TYPE as manageType,
    ch.BULID_AREA as bulidArea,
    ch.RENT_AREA as rentArea,
    ch.EVALUATE_PRICE as evaluatePrice,
    ch.EVALUATE_DATE as evaluateDate,
    decode(ch.IS_VACANT,'0','是','1','否','是') as isVacant,
    ch.ADDRESS_BUILDING as addressBuilding,
    ch.ADDRESS_UNIT as addressUnit,
    ch.ADDRESS_FLOOR as addressFloor,
    t2.NAME as regionName,
    t.organization_name as organizationName,t.lessee_name as renter,t.personal_tel as sellerPhone,co.org_name as manageOrg

    from
    GHOUSE_HOUSE_INFO ch
    left join GHOUSE_ADDR_INFO ca on ca.id=ch.address_id
    LEFT JOIN A1_D t2 ON ca.ZONE_ID = t2.region_code
    left join GHOUSE_HOUSE_PROPERTY gh on gh.house_id=ch.id
    left join GHOUSE_HOUSE_ARCHIVES ga on ga.house_id=ch.id
      left join cf_organization co on co.ORG_CODE=ch.CREATE_UNIT_ID
    left join
    ( select
    distinct
    c.id,c.contract_no,c.rent_start_date,c.rent_end_date,c.rental_payto_date,c.contract_invalid_date,
    c.contract_invalid_reason,c.rent_area,c.rental_month_amount,c.service_num,c.contract_status,
    l.organization_name,l.organization_contract,l.organization_tel,l.lessee_name,l.unique_id,l.personal_tel,
    count(ch.id) over(partition by c.id) as houseNum,gi.house_id
    from ghouse_contr c
    inner join ghouse_lessee l on c.lessee_id = l.id
    inner join ghouse_contr_house ch on  c.id = ch.contr_id
    join GHOUSE_CONTR_HOUSE gi on gi.CONTR_ID=c.id

    where c.is_deleted=0 and l.is_deleted=0 and ch.is_deleted=0  and c.is_final=1 and c.contract_status='VALID') t
    on t.house_id=ch.id
    where 1=1
    <if test="authorityList != null and authorityList.size > 0">
      and ch.create_unit_id in
      <foreach collection="authorityList" index="idx" item="authority" open="(" close=")" separator=",">
        #{authority.dm}
      </foreach>
    </if>
    <if test="userId != null and userId != ''">
      and ch.SYS_CREATE_ID=#{userId}
    </if>
    <if test="hourseUseType!=null and hourseUseType!=''">
      and  ch.HOURSE_USE_TYPE=#{hourseUseType}
    </if>
    <if test="safetyLevel!=null and safetyLevel!=''">
      and  ch.SAFETY_LEVEL=#{safetyLevel}
    </if>
    <if test="manageType!=null and manageType!=''">
      and  ch.MANAGE_TYPE=#{manageType}
    </if>
    <if test="regionCode!=null and regionCode!=''">
      and t2.REGION_CODE=#{regionCode}
    </if>

    <if test="hasProperty!=null and hasProperty!=''">
      and ch.HAS_PROPERTY=#{hasProperty}
    </if>
    <if test="isVacant!=null and isVacant!=''">
      and ch.is_vacant=#{isVacant}
    </if>
    <if test="manaageOrg!=null and manaageOrg!=''">
      and ch.CREATE_UNIT_ID=#{manaageOrg}
    </if>

    <if test="houseStatus!=null and houseStatus!=''">
      and ch.HOUSE_STATUS=#{houseStatus}
    </if>
    <if test="searchContent!=null and searchContent!=''">
      and ca.LIVING_AREA_NAME||ca.street_name||ch.HOUSE_NO||ch.ADDRESS_ROOM_NO like '%' || #{searchContent} || '%'
    </if>



    order by ch.house_no desc
  </select>
  <!--查询公房分布图房屋列表-->
  <select id="selectMapHouseList" resultType="com.funi.platform.lshc.vo.MapHouseVo" parameterType="com.funi.platform.lshc.query.MapHouseQuery">
    select  ho.ID houseId,ho.HOUSE_NO houseNo,org.ORG_NAME createUnitName,
    ho.BULID_AREA bulidArea,ho.RENT_AREA rentArea,
    ho.HOURSE_USE_TYPE hourseUseType,
    ho.MANAGE_TYPE manageType,
    ho.SAFETY_LEVEL safetyLevel,
    (select  CASE WHEN le.RENTOR_TYPE = '1' THEN le.lessee_name ELSE le.ORGANIZATION_NAME END from GHOUSE_LESSEE le
    left join GHOUSE_CONTR c on c.lessee_id = le.id
    left join GHOUSE_CONTR_HOUSE ch on ch.contr_id = c.id
    where (c.contract_status='VALID' or c.contract_status='EXAMINING') and ch.HOUSE_ID = ho.id and rownum=1)  rentMan,
    ( select  CASE WHEN le.RENTOR_TYPE = '1' THEN le.personal_tel ELSE le.ORGANIZATION_TEL END from GHOUSE_LESSEE le
    left join GHOUSE_CONTR c on c.lessee_id = le.id
    left join GHOUSE_CONTR_HOUSE ch on ch.contr_id = c.id
    where (c.contract_status='VALID' or c.contract_status='EXAMINING') and ch.HOUSE_ID = ho.id and rownum=1) telNum
    from GHOUSE_HOUSE_INFO ho
    left join GHOUSE_ADDR_INFO addr on ADDR.id = ho.ADDRESS_ID
    left join cf_organization org on org.ORG_CODE = ho.CREATE_UNIT_ID
    where addr.id = #{cId}

  </select>

  <select id="selectAdddressList" resultType="com.funi.platform.lshc.vo.AddressVo" parameterType="java.lang.String">
    SELECT
    t1.id AS id,
    t1.SERIAL_NO AS serialNo,
    t2.NAME AS regionName,
    t1.LIVING_AREA_NAME AS livingAreaName,
    t1.STREET_NAME AS streetName,
    t1.STREET_NO AS streetNo,
    t1.ADDR_REMARK AS addrRemark,
    t1.POSITION_X AS positionX,
    t1.POSITION_Y AS positionY
    FROM
    GHOUSE_ADDR_INFO t1
    LEFT JOIN A1_D t2 ON t1.ZONE_ID = t2.REGION_CODE
    <where>
      t1.IS_DELETED = 0
      <if test="id != null and id != ''">
        and t1.id=#{id}
      </if>
      <if test="keywords != null and keywords != ''">
        and (t1.LIVING_AREA_NAME like '%' || #{keywords} || '%' )
      </if>

    </where>
  </select>

  <update id="modifyRentStatus">
    update ghouse_house_info set rent_status=#{rentStatus}
      where id in
    <foreach collection="list"    separator=","  item="item" open="(" close=")">
      #{item.houseId}
    </foreach>
    and is_deleted=0
  </update>

  <select id="isExistRent" resultType="java.lang.Boolean">
    select count(1) from  ghouse_house_info
    where rent_status=1 and id in
    <foreach collection="list"    separator=","  item="item" open="(" close=")">
      #{item.houseId}
    </foreach>
  </select>
  <update id="updateHouseHasProperty">
     update GHOUSE_HOUSE_INFO
    set HAS_PROPERTY = '1'
    where id=#{houseId}
  </update>
  <select id="generateHouseNo" resultType="java.lang.String">
    select SEQ_GHOUSE_HOUSE_NO.nextval from dual
  </select>

  <select id="selectManageTypeByContractId" resultType="java.lang.String">
    select
        hou.MANAGE_TYPE
      from  ghouse_contr_house ch
      inner join ghouse_house_info hou on hou.id=ch.house_id
      where  ch.contr_id=#{contractId} and ch.is_deleted=0
  </select>
    <select id="selectHouseNoInfo" resultType="java.lang.String">
       select
        hou.MANAGE_TYPE
      from
       ghouse_house_info hou
      where  hou.HOUSE_NO=#{houseNo}
    </select>
    <!--校验当前房屋是否存在过程中的业务-->
    <select id="existHouseBiz" resultType="java.util.Map">
       select 'REPAIR' as BIZ_TYPE,REPAIR_NO as BIZ_NO from ghouse_repair where repair_status != '已完成' and house_id=#{houseMap.houseId}
       union
       SELECT 'CONTRACT' as BIZ_TYPE,t.contract_no as BIZ_NO FROM GHOUSE_CONTR t
          LEFT JOIN GHOUSE_CONTR_HOUSE t2 ON t.id = t2.contr_id
       WHERE
          t2.house_id = #{houseMap.houseId} AND t.is_final = 0
    </select>
</mapper>