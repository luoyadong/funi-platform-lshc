<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.funi.platform.lshc.mapper.repair.RepairMapper">
  <resultMap id="BaseResultMap" type="com.funi.platform.lshc.entity.repair.Repair">
    <id column="ID" jdbcType="VARCHAR" property="id" />
    <result column="REPAIR_NO" jdbcType="CHAR" property="repairNo" />
    <result column="HOUSE_ID" jdbcType="VARCHAR" property="houseId" />
    <result column="REPAIR_CONTENT" jdbcType="VARCHAR" property="repairContent" />
    <result column="REQUEST_USER" jdbcType="VARCHAR" property="requestUser" />
    <result column="REQUEST_USER_TEL" jdbcType="VARCHAR" property="requestUserTel" />
    <result column="REQUEST_TIME" jdbcType="CHAR" property="requestTime" />
    <result column="REPAIR_ADD_FLAG" jdbcType="CHAR" property="repairAddFlag" />
    <result column="REPAIR_COMPLETE_TIME" jdbcType="CHAR" property="repairCompleteTime" />
    <result column="REPAIR_UNIT_USER" jdbcType="VARCHAR" property="repairUnitUser" />
    <result column="REPAIR_MONEY" jdbcType="DECIMAL" property="repairMoney" />
    <result column="REPAIR_COMPLETE_COMMENT" jdbcType="VARCHAR" property="repairCompleteComment" />
    <result column="REPAIR_QUA_DUR" jdbcType="DECIMAL" property="repairQuaDur" />
    <result column="REPAIR_STATUS" jdbcType="CHAR" property="repairStatus" />
    <result column="IS_DELETED" jdbcType="DECIMAL" property="isDeleted" />
    <result column="VERSION" jdbcType="DECIMAL" property="version" />
    <result column="SYS_CREATE_TIME" jdbcType="TIMESTAMP" property="sysCreateTime" />
    <result column="SYS_UPDATE_TIME" jdbcType="TIMESTAMP" property="sysUpdateTime" />
    <result column="SYS_DELETE_TIME" jdbcType="TIMESTAMP" property="sysDeleteTime" />
    <result column="SYS_CREATE_ID" jdbcType="VARCHAR" property="sysCreateId" />
    <result column="SYS_UPDATE_ID" jdbcType="VARCHAR" property="sysUpdateId" />
    <result column="SYS_DELETE_ID" jdbcType="VARCHAR" property="sysDeleteId" />
    <result column="CREATE_UNIT_ID" jdbcType="VARCHAR" property="createUnitId" />
  </resultMap>
  <resultMap id="resultMap" type="com.funi.platform.lshc.vo.RepairVo" extends="BaseResultMap">
    <result column="houseNoSys" jdbcType="VARCHAR" property="houseNoSys" />
    <result column="houseAddress" property="houseAddress"/>
    <result column="lessee_name" property="renter"/>
  </resultMap>
  <sql id="Base_Column_List">
    ID, REPAIR_NO, HOUSE_ID, REPAIR_CONTENT, REQUEST_USER, REQUEST_USER_TEL, REQUEST_TIME, 
    REPAIR_ADD_FLAG, REPAIR_COMPLETE_TIME, REPAIR_UNIT_USER, REPAIR_MONEY, REPAIR_COMPLETE_COMMENT, 
    REPAIR_QUA_DUR, REPAIR_STATUS, IS_DELETED, VERSION, SYS_CREATE_TIME, SYS_UPDATE_TIME, 
    SYS_DELETE_TIME, SYS_CREATE_ID, SYS_UPDATE_ID, SYS_DELETE_ID,CREATE_UNIT_ID
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from GHOUSE_REPAIR
    where ID = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from GHOUSE_REPAIR
    where ID = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.funi.platform.lshc.entity.repair.Repair">
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.String">
      SELECT sys_guid() FROM DUAL
    </selectKey>
    insert into GHOUSE_REPAIR (ID, REPAIR_NO, HOUSE_ID, REPAIR_CONTENT,
      REQUEST_USER, REQUEST_USER_TEL, REQUEST_TIME, 
      REPAIR_ADD_FLAG, REPAIR_COMPLETE_TIME, REPAIR_UNIT_USER, 
      REPAIR_MONEY, REPAIR_COMPLETE_COMMENT, REPAIR_QUA_DUR, 
      REPAIR_STATUS, IS_DELETED, VERSION, 
      SYS_CREATE_TIME, SYS_UPDATE_TIME, SYS_DELETE_TIME, 
      SYS_CREATE_ID, SYS_UPDATE_ID, SYS_DELETE_ID,CREATE_UNIT_ID
      )
    values (#{id,jdbcType=VARCHAR}, #{repairNo,jdbcType=CHAR}, #{houseId,jdbcType=VARCHAR}, #{repairContent,jdbcType=VARCHAR},
      #{requestUser,jdbcType=VARCHAR}, #{requestUserTel,jdbcType=VARCHAR}, #{requestTime,jdbcType=CHAR}, 
      #{repairAddFlag,jdbcType=CHAR}, #{repairCompleteTime,jdbcType=CHAR}, #{repairUnitUser,jdbcType=VARCHAR}, 
      #{repairMoney,jdbcType=DECIMAL}, #{repairCompleteComment,jdbcType=VARCHAR}, #{repairQuaDur,jdbcType=DECIMAL}, 
      #{repairStatus,jdbcType=CHAR}, #{isDeleted,jdbcType=DECIMAL}, #{version,jdbcType=DECIMAL}, 
      #{sysCreateTime,jdbcType=TIMESTAMP}, #{sysUpdateTime,jdbcType=TIMESTAMP}, #{sysDeleteTime,jdbcType=TIMESTAMP}, 
      #{sysCreateId,jdbcType=VARCHAR}, #{sysUpdateId,jdbcType=VARCHAR}, #{sysDeleteId,jdbcType=VARCHAR}, #{createUnitId,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.funi.platform.lshc.entity.repair.Repair">
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.String">
      SELECT sys_guid() FROM DUAL
    </selectKey>
    insert into GHOUSE_REPAIR
    <trim prefix="(" suffix=")" suffixOverrides=",">
      ID,
      <if test="repairNo != null">
        REPAIR_NO,
      </if>
      <if test="houseId != null">
        HOUSE_ID,
      </if>
      <if test="repairContent != null">
        REPAIR_CONTENT,
      </if>
      <if test="requestUser != null">
        REQUEST_USER,
      </if>
      <if test="requestUserTel != null">
        REQUEST_USER_TEL,
      </if>
      <if test="requestTime != null">
        REQUEST_TIME,
      </if>
      <if test="repairAddFlag != null">
        REPAIR_ADD_FLAG,
      </if>
      <if test="repairCompleteTime != null">
        REPAIR_COMPLETE_TIME,
      </if>
      <if test="repairUnitUser != null">
        REPAIR_UNIT_USER,
      </if>
      <if test="repairMoney != null">
        REPAIR_MONEY,
      </if>
      <if test="repairCompleteComment != null">
        REPAIR_COMPLETE_COMMENT,
      </if>
      <if test="repairQuaDur != null">
        REPAIR_QUA_DUR,
      </if>
      <if test="repairStatus != null">
        REPAIR_STATUS,
      </if>
      <if test="isDeleted != null">
        IS_DELETED,
      </if>
      <if test="version != null">
        VERSION,
      </if>
      <if test="sysCreateTime != null">
        SYS_CREATE_TIME,
      </if>
      <if test="sysUpdateTime != null">
        SYS_UPDATE_TIME,
      </if>
      <if test="sysDeleteTime != null">
        SYS_DELETE_TIME,
      </if>
      <if test="sysCreateId != null">
        SYS_CREATE_ID,
      </if>
      <if test="sysUpdateId != null">
        SYS_UPDATE_ID,
      </if>
      <if test="sysDeleteId != null">
        SYS_DELETE_ID,
      </if>
      <if test="createUnitId != null">
        CREATE_UNIT_ID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      #{id,jdbcType=VARCHAR},
      <if test="repairNo != null">
        #{repairNo,jdbcType=CHAR},
      </if>
      <if test="houseId != null">
        #{houseId,jdbcType=VARCHAR},
      </if>
      <if test="repairContent != null">
        #{repairContent,jdbcType=VARCHAR},
      </if>
      <if test="requestUser != null">
        #{requestUser,jdbcType=VARCHAR},
      </if>
      <if test="requestUserTel != null">
        #{requestUserTel,jdbcType=VARCHAR},
      </if>
      <if test="requestTime != null">
        #{requestTime,jdbcType=CHAR},
      </if>
      <if test="repairAddFlag != null">
        #{repairAddFlag,jdbcType=CHAR},
      </if>
      <if test="repairCompleteTime != null">
        #{repairCompleteTime,jdbcType=CHAR},
      </if>
      <if test="repairUnitUser != null">
        #{repairUnitUser,jdbcType=VARCHAR},
      </if>
      <if test="repairMoney != null">
        #{repairMoney,jdbcType=DECIMAL},
      </if>
      <if test="repairCompleteComment != null">
        #{repairCompleteComment,jdbcType=VARCHAR},
      </if>
      <if test="repairQuaDur != null">
        #{repairQuaDur,jdbcType=DECIMAL},
      </if>
      <if test="repairStatus != null">
        #{repairStatus,jdbcType=CHAR},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=DECIMAL},
      </if>
      <if test="version != null">
        #{version,jdbcType=DECIMAL},
      </if>
      <if test="sysCreateTime != null">
        #{sysCreateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sysUpdateTime != null">
        #{sysUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sysDeleteTime != null">
        #{sysDeleteTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sysCreateId != null">
        #{sysCreateId,jdbcType=VARCHAR},
      </if>
      <if test="sysUpdateId != null">
        #{sysUpdateId,jdbcType=VARCHAR},
      </if>
      <if test="sysDeleteId != null">
        #{sysDeleteId,jdbcType=VARCHAR},
      </if>
      <if test="createUnitId != null">
        #{createUnitId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.funi.platform.lshc.entity.repair.Repair">
    update GHOUSE_REPAIR
    <set>
      <if test="repairNo != null">
        REPAIR_NO = #{repairNo,jdbcType=CHAR},
      </if>
      <if test="houseId != null">
        HOUSE_ID = #{houseId,jdbcType=VARCHAR},
      </if>
      <if test="repairContent != null">
        REPAIR_CONTENT = #{repairContent,jdbcType=VARCHAR},
      </if>
      <if test="requestUser != null">
        REQUEST_USER = #{requestUser,jdbcType=VARCHAR},
      </if>
      <if test="requestUserTel != null">
        REQUEST_USER_TEL = #{requestUserTel,jdbcType=VARCHAR},
      </if>
      <if test="requestTime != null">
        REQUEST_TIME = #{requestTime,jdbcType=CHAR},
      </if>
      <if test="repairAddFlag != null">
        REPAIR_ADD_FLAG = #{repairAddFlag,jdbcType=CHAR},
      </if>
      <if test="repairCompleteTime != null">
        REPAIR_COMPLETE_TIME = #{repairCompleteTime,jdbcType=CHAR},
      </if>
      <if test="repairUnitUser != null">
        REPAIR_UNIT_USER = #{repairUnitUser,jdbcType=VARCHAR},
      </if>
      <if test="repairMoney != null">
        REPAIR_MONEY = #{repairMoney,jdbcType=DECIMAL},
      </if>
      <if test="repairCompleteComment != null">
        REPAIR_COMPLETE_COMMENT = #{repairCompleteComment,jdbcType=VARCHAR},
      </if>
      <if test="repairQuaDur != null">
        REPAIR_QUA_DUR = #{repairQuaDur,jdbcType=DECIMAL},
      </if>
      <if test="repairStatus != null">
        REPAIR_STATUS = #{repairStatus,jdbcType=CHAR},
      </if>
      <if test="isDeleted != null">
        IS_DELETED = #{isDeleted,jdbcType=DECIMAL},
      </if>
      <if test="version != null">
        VERSION = #{version,jdbcType=DECIMAL},
      </if>
      <if test="sysCreateTime != null">
        SYS_CREATE_TIME = #{sysCreateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sysUpdateTime != null">
        SYS_UPDATE_TIME = #{sysUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sysDeleteTime != null">
        SYS_DELETE_TIME = #{sysDeleteTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sysCreateId != null">
        SYS_CREATE_ID = #{sysCreateId,jdbcType=VARCHAR},
      </if>
      <if test="sysUpdateId != null">
        SYS_UPDATE_ID = #{sysUpdateId,jdbcType=VARCHAR},
      </if>
      <if test="sysDeleteId != null">
        SYS_DELETE_ID = #{sysDeleteId,jdbcType=VARCHAR},
      </if>
      <if test="createUnitId != null">
        CREATE_UNIT_ID = #{createUnitId,jdbcType=VARCHAR},
      </if>
    </set>
    where REPAIR_NO = #{repairNo,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.funi.platform.lshc.entity.repair.Repair">
    update GHOUSE_REPAIR
    set REPAIR_NO = #{repairNo,jdbcType=CHAR},
      HOUSE_ID = #{houseId,jdbcType=VARCHAR},
      REPAIR_CONTENT = #{repairContent,jdbcType=VARCHAR},
      REQUEST_USER = #{requestUser,jdbcType=VARCHAR},
      REQUEST_USER_TEL = #{requestUserTel,jdbcType=VARCHAR},
      REQUEST_TIME = #{requestTime,jdbcType=CHAR},
      REPAIR_ADD_FLAG = #{repairAddFlag,jdbcType=CHAR},
      REPAIR_COMPLETE_TIME = #{repairCompleteTime,jdbcType=CHAR},
      REPAIR_UNIT_USER = #{repairUnitUser,jdbcType=VARCHAR},
      REPAIR_MONEY = #{repairMoney,jdbcType=DECIMAL},
      REPAIR_COMPLETE_COMMENT = #{repairCompleteComment,jdbcType=VARCHAR},
      REPAIR_QUA_DUR = #{repairQuaDur,jdbcType=DECIMAL},
      REPAIR_STATUS = #{repairStatus,jdbcType=CHAR},
      IS_DELETED = #{isDeleted,jdbcType=DECIMAL},
      VERSION = #{version,jdbcType=DECIMAL},
      SYS_CREATE_TIME = #{sysCreateTime,jdbcType=TIMESTAMP},
      SYS_UPDATE_TIME = #{sysUpdateTime,jdbcType=TIMESTAMP},
      SYS_DELETE_TIME = #{sysDeleteTime,jdbcType=TIMESTAMP},
      SYS_CREATE_ID = #{sysCreateId,jdbcType=VARCHAR},
      SYS_UPDATE_ID = #{sysUpdateId,jdbcType=VARCHAR},
      SYS_DELETE_ID = #{sysDeleteId,jdbcType=VARCHAR},
      CREATE_UNIT_ID = #{createUnitId,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=VARCHAR}
  </update>

  <select id="selectHouseRepairListByHouseId" resultMap="resultMap">
       select gr.*,ch.HOUSE_NO as houseNoSys,t2.NAME as regionName,ca.LIVING_AREA_NAME,ca.street_name as houseAddress,gh.id as housePropertyId,ga.id as houseArchivesId from
     GHOUSE_HOUSE_INFO ch
     left join GHOUSE_ADDR_INFO ca on ca.id=ch.address_id
     LEFT JOIN A1_D t2 ON ca.ZONE_ID = t2.region_code
     left join GHOUSE_HOUSE_PROPERTY gh on gh.house_id=ch.id
     left join GHOUSE_HOUSE_ARCHIVES ga on ga.house_id=ch.id
      join GHOUSE_REPAIR gr on gr.HOUSE_ID=ch.id
      where gr.HOUSE_ID=#{houseId}

  </select>
  <select id="generateRepairNum" resultType="java.lang.String">
    select SEQ_GHOUSE_REPAIR_NO.nextval from dual
  </select>
  <select id="selectHouseRepairList"  resultMap="resultMap" parameterType="com.funi.platform.lshc.query.RepairQuery">
   select gr.*,ch.HOUSE_NO as houseNoSys,t2.NAME as regionName,ca.LIVING_AREA_NAME,ca.street_name as houseAddress,gh.id as housePropertyId,ga.id as houseArchivesId,
    t.organization_name,t.lessee_name,t.personal_tel
    from
     GHOUSE_HOUSE_INFO ch
     left join GHOUSE_ADDR_INFO ca on ca.id=ch.address_id
     LEFT JOIN A1_D t2 ON ca.ZONE_ID = t2.region_code
     left join GHOUSE_HOUSE_PROPERTY gh on gh.house_id=ch.id
     left join GHOUSE_HOUSE_ARCHIVES ga on ga.house_id=ch.id
      join GHOUSE_REPAIR gr on gr.HOUSE_ID=ch.id
    left join
    ( select
    distinct
    c.id,c.contract_no,c.rent_start_date,c.rent_end_date,c.rental_payto_date,c.contract_invalid_date,
    c.contract_invalid_reason,c.rent_area,c.rental_month_amount,c.service_num,c.contract_status,
    l.organization_name,l.organization_contract,l.organization_tel,l.lessee_name,l.unique_id,l.personal_tel,
    count(ch.id) over(partition by c.id) as houseNum,gi.house_id
    from ghouse_contr c
    inner join ghouse_lessee l on c.lessee_id = l.id
    inner join ghouse_contr_house ch on  c.id = ch.contr_id
    join GHOUSE_CONTR_HOUSE gi on gi.CONTR_ID=c.id

    where c.is_deleted=0 and l.is_deleted=0 and ch.is_deleted=0  and c.is_final=1 and c.contract_status='VALID') t
    on t.house_id=ch.id
    where 1=1
    <if test="authorityList != null and authorityList.size > 0">
      and gr.create_unit_id in
      <foreach collection="authorityList" index="idx" item="authority" open="(" close=")" separator=",">
        #{authority.dm}
      </foreach>
    </if>
    <if test="userId != null and userId != ''">
      and gr.SYS_CREATE_ID=#{userId}
    </if>
    <if test="manaageOrg!=null and manaageOrg!=''">
      and ch.CREATE_UNIT_ID=#{manaageOrg}
    </if>
    <if test="searchContent!=null and searchContent!=''">
      and ca.LIVING_AREA_NAME||ca.street_name||ch.HOUSE_NO||ch.ADDRESS_ROOM_NO||t.lessee_name like '%' || #{searchContent} || '%'
    </if>
    <if test="requestTimeStart!=null and requestTimeStart!='' ">
      and to_date(gr.REQUEST_TIME,'yyyy-mm-dd') >= to_date(#{requestTimeStart},'yyyy-mm-dd')
    </if>
    <if test="requestTimeEnd!=null and requestTimeEnd!='' ">
      and to_date(gr.REQUEST_TIME,'yyyy-mm-dd') >= to_date(#{requestTimeEnd},'yyyy-mm-dd')
    </if>
    <if test="hourseUseType!=null and hourseUseType!='' ">
      and ch.HOURSE_USE_TYPE=#{hourseUseType}
    </if>
    order by gr.sys_create_time desc,gr.sys_update_time desc
  </select>

  <select id="selectHouseUndoRepairList" resultMap="resultMap" parameterType="com.funi.platform.lshc.query.RepairQuery">
  select gr.*,ch.HOUSE_NO as houseNoSys,t2.NAME as regionName,ca.LIVING_AREA_NAME,ca.street_name as houseAddress,gh.id as housePropertyId,ga.id as houseArchivesId,
    t.organization_name,t.lessee_name,t.personal_tel
    from
     GHOUSE_HOUSE_INFO ch
     left join GHOUSE_ADDR_INFO ca on ca.id=ch.address_id
     LEFT JOIN A1_D t2 ON ca.ZONE_ID = t2.region_code
     left join GHOUSE_HOUSE_PROPERTY gh on gh.house_id=ch.id
     left join GHOUSE_HOUSE_ARCHIVES ga on ga.house_id=ch.id
      join GHOUSE_REPAIR gr on gr.HOUSE_ID=ch.id
          inner join business_task bt on bt.business_id =gr.REPAIR_NO
    left  join ghouse_job_accept ja on gr.REPAIR_NO=ja.service_num
   left join
    ( select
    distinct
    c.id,c.contract_no,c.rent_start_date,c.rent_end_date,c.rental_payto_date,c.contract_invalid_date,
    c.contract_invalid_reason,c.rent_area,c.rental_month_amount,c.service_num,c.contract_status,
    l.organization_name,l.organization_contract,l.organization_tel,l.lessee_name,l.unique_id,l.personal_tel,
    count(ch.id) over(partition by c.id) as houseNum,gi.house_id
    from ghouse_contr c
    inner join ghouse_lessee l on c.lessee_id = l.id
    inner join ghouse_contr_house ch on  c.id = ch.contr_id
    join GHOUSE_CONTR_HOUSE gi on gi.CONTR_ID=c.id

    where c.is_deleted=0 and l.is_deleted=0 and ch.is_deleted=0  and c.is_final=1 and c.contract_status='VALID') t
    on t.house_id=ch.id
    where
       bt.owner_type = #{ownerType}
      and bt.owner in
    <foreach collection="owner" item="item" open="(" close=")" separator=",">
      #{item.id}
    </foreach>
    <if test="authorityList != null and authorityList.size > 0">
      and gr.create_unit_id in
      <foreach collection="authorityList" index="idx" item="authority" open="(" close=")" separator=",">
        #{authority.dm}
      </foreach>
    </if>
    <if test="userId != null and userId != ''">
      and gr.SYS_CREATE_ID=#{userId}
    </if>
    <if test="manaageOrg!=null and manaageOrg!=''">
      and ch.CREATE_UNIT_ID=#{manaageOrg}
    </if>
    <if test="searchContent!=null and searchContent!=''">
      and ca.LIVING_AREA_NAME||ca.street_name||ch.HOUSE_NO||ch.ADDRESS_ROOM_NO||t.lessee_name like '%' || #{searchContent} || '%'
    </if>
    <if test="requestTimeStart!=null and requestTimeStart!='' ">
      and to_date(gr.REQUEST_TIME,'yyyy-mm-dd') >= to_date(#{requestTimeStart},'yyyy-mm-dd')
    </if>
    <if test="requestTimeEnd!=null and requestTimeEnd!='' ">
      and to_date(gr.REQUEST_TIME,'yyyy-mm-dd') >= to_date(#{requestTimeEnd},'yyyy-mm-dd')
    </if>
    <if test="hourseUseType!=null and hourseUseType!='' ">
      and ch.HOURSE_USE_TYPE=#{hourseUseType}
    </if>
    order by gr.sys_create_time desc,gr.sys_update_time desc
  </select>

  <select id="selectHouseAlseRepairList" resultMap="resultMap" parameterType="com.funi.platform.lshc.query.RepairQuery">
      select gr.*,ch.HOUSE_NO as houseNoSys,t2.NAME as regionName,ca.LIVING_AREA_NAME,ca.street_name as houseAddress,gh.id as housePropertyId,ga.id as houseArchivesId,
    t.organization_name,t.lessee_name,t.personal_tel

    from
     GHOUSE_HOUSE_INFO ch
     left join GHOUSE_ADDR_INFO ca on ca.id=ch.address_id
     LEFT JOIN A1_D t2 ON ca.ZONE_ID = t2.region_code
     left join GHOUSE_HOUSE_PROPERTY gh on gh.house_id=ch.id
     left join GHOUSE_HOUSE_ARCHIVES ga on ga.house_id=ch.id
      join GHOUSE_REPAIR gr on gr.HOUSE_ID=ch.id
    inner join job_log j on gr.REPAIR_NO = j.business_id and j.is_deleted=0
    left join
    ( select
    distinct
    c.id,c.contract_no,c.rent_start_date,c.rent_end_date,c.rental_payto_date,c.contract_invalid_date,
    c.contract_invalid_reason,c.rent_area,c.rental_month_amount,c.service_num,c.contract_status,
    l.organization_name,l.organization_contract,l.organization_tel,l.lessee_name,l.unique_id,l.personal_tel,
    count(ch.id) over(partition by c.id) as houseNum,gi.house_id
    from ghouse_contr c
    inner join ghouse_lessee l on c.lessee_id = l.id
    inner join ghouse_contr_house ch on  c.id = ch.contr_id
    join GHOUSE_CONTR_HOUSE gi on gi.CONTR_ID=c.id

    where c.is_deleted=0 and l.is_deleted=0 and ch.is_deleted=0  and c.is_final=1 and c.contract_status='VALID') t
    on t.house_id=ch.id
    where 1=1
    <if test="authorityList != null and authorityList.size > 0">
      and gr.create_unit_id in
      <foreach collection="authorityList" index="idx" item="authority" open="(" close=")" separator=",">
        #{authority.dm}
      </foreach>
    </if>
    <if test="userId != null and userId != ''">
      and gr.SYS_CREATE_ID=#{userId}
    </if>
    <if test="manaageOrg!=null and manaageOrg!=''">
      and ch.CREATE_UNIT_ID=#{manaageOrg}
    </if>
    <if test="searchContent!=null and searchContent!=''">
      and ca.LIVING_AREA_NAME||ca.street_name||ch.HOUSE_NO||ch.ADDRESS_ROOM_NO||t.lessee_name like '%' || #{searchContent} || '%'
    </if>
    <if test="requestTimeStart!=null and requestTimeStart!='' ">
      and to_date(gr.REQUEST_TIME,'yyyy-mm-dd') >= to_date(#{requestTimeStart},'yyyy-mm-dd')
    </if>
    <if test="requestTimeEnd!=null and requestTimeEnd!='' ">
      and to_date(gr.REQUEST_TIME,'yyyy-mm-dd') >= to_date(#{requestTimeEnd},'yyyy-mm-dd')
    </if>

    <if test="hourseUseType!=null and hourseUseType!='' ">
      and ch.HOURSE_USE_TYPE=#{hourseUseType}
    </if>
    order by gr.sys_create_time desc,gr.sys_update_time desc
  </select>
</mapper>