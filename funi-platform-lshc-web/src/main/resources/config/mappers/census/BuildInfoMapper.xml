<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.funi.platform.lshc.mapper.census.BuildInfoMapper">
  <resultMap id="BaseResultMap" type="com.funi.platform.lshc.entity.census.BuildInfo">
    <id column="ID" jdbcType="VARCHAR" property="id" />
    <result column="SERIAL_NO" jdbcType="DECIMAL" property="serialNo" />
    <result column="REGION" jdbcType="VARCHAR" property="region" />
    <result column="STREET" jdbcType="VARCHAR" property="street" />
    <result column="PROJECT_NAME" jdbcType="VARCHAR" property="projectName" />
    <result column="MAP_CODE" jdbcType="VARCHAR" property="mapCode" />
    <result column="ADDRESS" jdbcType="VARCHAR" property="address" />
    <result column="COMMON" jdbcType="VARCHAR" property="common" />
    <result column="VERSION" jdbcType="DECIMAL" property="version" />
    <result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime" />
    <result column="CREATE_ID" jdbcType="VARCHAR" property="createId" />
    <result column="UPDATE_TIME" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="UPDATE_ID" jdbcType="VARCHAR" property="updateId" />
    <result column="DELETED" jdbcType="DECIMAL" property="deleted" />
    <result column="ISVALIDE" jdbcType="VARCHAR" property="isvalide" />
    <result column="BUILD_NAME" jdbcType="VARCHAR" property="buildName" />
    <result column="COMMUNITY_NAME" jdbcType="VARCHAR" property="communityName" />
  </resultMap>
  <resultMap id="BuildInfoVoMap" type="com.funi.platform.lshc.vo.census.BuildInfoVo" extends="BaseResultMap">
    <result column="houseCount" property="houseCount" />
  </resultMap>
  <sql id="Base_Column_List">
    ID, SERIAL_NO, REGION, STREET, PROJECT_NAME, MAP_CODE, ADDRESS, COMMON, VERSION,
    CREATE_TIME, CREATE_ID, UPDATE_TIME, UPDATE_ID, DELETED, ISVALIDE,BUILD_NAME,COMMUNITY_NAME
  </sql>

  <update id="batchDeleteBuildInfo">
    update  LSHC_BUILD_INFO
    set DELETED =1,ISVALIDE='0', VERSION=VERSION+1,UPDATE_TIME=(select sysdate  from dual),UPDATE_ID=#{userId}
    where id in
    <foreach collection="ids" separator=","  item="id" open="(" close=")">
      #{id}
    </foreach>
  </update>

  <select id="selectBuildInfoVoList" parameterType="com.funi.platform.lshc.query.census.BuildInfoQuery" resultMap="BuildInfoVoMap">
      SELECT DISTINCT
          t1.id,
          t1.SERIAL_NO AS serialNo,
          t1.REGION AS region,
          t1.STREET AS street,
          t1.PROJECT_NAME AS projectName,
          t1.MAP_CODE AS mapCode,
          t1.ADDRESS AS address,
          t1.BUILD_NAME AS buildName,
          t1.COMMUNITY_NAME AS communityName,
          count( t2.id ) over ( partition BY t1.id ) AS houseCount
          FROM
          LSHC_BUILD_INFO t1
          LEFT JOIN LSHC_REGI_INFO t2 ON t1.MAP_CODE = t2.MAP_CODE
          <if test="queryType == '2'.toString()">
              INNER JOIN BUSINESS_TASK t3 ON t2.id = t3.business_id
          </if>
          <if test="queryType == '3'.toString()">
              INNER JOIN job_log t3 ON t2.id = t3.business_id AND t3.is_deleted = 0
          </if>
      WHERE
          t1.ISVALIDE = '1'
          AND t1.DELETED = 0
          AND t2.ISVALIDE = '1'
          AND t2.DELETED =0
          <if test="queryType == '0'.toString()">
              AND t2.house_status in ('新建','待初审')
          </if>
          <if test="queryType == '0'.toString() or queryType == '1'.toString()">
            <if test="authorityList != null and authorityList.size > 0">
              and t2.common in
              <foreach collection="authorityList" index="idx" item="authority" open="(" close=")" separator=",">
                #{authority.dm}
              </foreach>
            </if>
          </if>
          <if test="queryType == '2'.toString()">
              AND t3.owner_type = #{ownerType}
              AND t3.owner in
              <foreach collection="owner" item="item" open="(" close=")" separator=",">
                  #{item.id}
              </foreach>
          </if>
          <if test="queryType == '3'.toString()">
              AND t3.auditor = #{ userId}
          </if>
        <if test="region != null and region != ''">
          AND t1.REGION = #{region}
        </if>
        <if test="street != null and street != ''">
          AND t1.STREET = #{street}
        </if>
        <if test="projectName != null and projectName != ''">
          AND t1.PROJECT_NAME LIKE '%'||#{projectName}||'%'
        </if>
        <if test="mapCode != null and mapCode != ''">
          AND t1.MAP_CODE LIKE '%'||#{mapCode}||'%'
        </if>
        <if test="address != null and address != ''">
          AND t1.ADDRESS LIKE '%'||#{address}||'%'
        </if>
      <if test="buildName != null and buildName != ''">
          AND t1.BUILD_NAME LIKE '%'||#{buildName}||'%'
      </if>
      <if test="communityName != null and communityName != ''">
          AND t1.COMMUNITY_NAME LIKE '%'||#{communityName}||'%'
      </if>
      <if test="houseId != null and houseId != ''">
          AND t2.HOUSE_ID LIKE '%'||#{houseId}||'%'
      </if>
      <if test="idNo != null and idNo != ''">
          AND t2.ID IN
          (SELECT t11.id FROM LSHC_REGI_INFO t11 INNER JOIN LSHC_ENT_INFO t22 ON t11.id = t22.HC_ID
          WHERE t22.ID_NO = #{idNo} GROUP BY t11.id)
      </if>
        ORDER BY t1.SERIAL_NO
  </select>

  <select id="selectBuildInfoByMapCode" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from LSHC_BUILD_INFO
    where MAP_CODE = #{mapCode,jdbcType=VARCHAR}
  </select>

  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from LSHC_BUILD_INFO
    where ID = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from LSHC_BUILD_INFO
    where ID = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.funi.platform.lshc.entity.census.BuildInfo">
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.String">
      SELECT sys_guid() FROM DUAL
    </selectKey>
    insert into LSHC_BUILD_INFO (ID, SERIAL_NO, REGION, STREET,
    PROJECT_NAME, MAP_CODE, ADDRESS,
    COMMON, VERSION, CREATE_TIME,
    CREATE_ID, UPDATE_TIME, UPDATE_ID,
    DELETED, ISVALIDE,BUILD_NAME,COMMUNITY_NAME)
    values ( #{id,jdbcType=VARCHAR}, #{serialNo,jdbcType=DECIMAL}, #{region,jdbcType=VARCHAR}, #{street,jdbcType=VARCHAR},
    #{projectName,jdbcType=VARCHAR}, #{mapCode,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR},
    #{common,jdbcType=VARCHAR}, #{version,jdbcType=DECIMAL}, #{createTime,jdbcType=TIMESTAMP},
    #{createId,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, #{updateId,jdbcType=VARCHAR},
    #{deleted,jdbcType=DECIMAL}, #{isvalide,jdbcType=VARCHAR}, #{buildName,jdbcType=VARCHAR}, #{communityName,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.funi.platform.lshc.entity.census.BuildInfo">
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.String">
      SELECT sys_guid() FROM DUAL
    </selectKey>
    insert into LSHC_BUILD_INFO
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="serialNo != null">
        SERIAL_NO,
      </if>
      <if test="region != null">
        REGION,
      </if>
      <if test="street != null">
        STREET,
      </if>
      <if test="projectName != null">
        PROJECT_NAME,
      </if>
      <if test="mapCode != null">
        MAP_CODE,
      </if>
      <if test="address != null">
        ADDRESS,
      </if>
      <if test="common != null">
        COMMON,
      </if>
      <if test="version != null">
        VERSION,
      </if>
      <if test="createTime != null">
        CREATE_TIME,
      </if>
      <if test="createId != null">
        CREATE_ID,
      </if>
      <if test="updateTime != null">
        UPDATE_TIME,
      </if>
      <if test="updateId != null">
        UPDATE_ID,
      </if>
      <if test="deleted != null">
        DELETED,
      </if>
      <if test="isvalide != null">
        ISVALIDE,
      </if>
      <if test="buildName != null">
        BUILD_NAME,
      </if>
      <if test="communityName != null">
        COMMUNITY_NAME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=DECIMAL},
      </if>
      <if test="serialNo != null">
        #{serialNo,jdbcType=DECIMAL},
      </if>
      <if test="region != null">
        #{region,jdbcType=VARCHAR},
      </if>
      <if test="street != null">
        #{street,jdbcType=VARCHAR},
      </if>
      <if test="projectName != null">
        #{projectName,jdbcType=VARCHAR},
      </if>
      <if test="mapCode != null">
        #{mapCode,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="common != null">
        #{common,jdbcType=VARCHAR},
      </if>
      <if test="version != null">
        #{version,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createId != null">
        #{createId,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateId != null">
        #{updateId,jdbcType=VARCHAR},
      </if>
      <if test="deleted != null">
        #{deleted,jdbcType=DECIMAL},
      </if>
      <if test="isvalide != null">
        #{isvalide,jdbcType=VARCHAR},
      </if>

      <if test="buildName != null">
        #{buildName,jdbcType=VARCHAR},
      </if>
      <if test="communityName != null">
        #{communityName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.funi.platform.lshc.entity.census.BuildInfo">
    update LSHC_BUILD_INFO
    <set>
      <if test="serialNo != null">
        SERIAL_NO = #{serialNo,jdbcType=DECIMAL},
      </if>
      <if test="region != null">
        REGION = #{region,jdbcType=VARCHAR},
      </if>
      <if test="street != null">
        STREET = #{street,jdbcType=VARCHAR},
      </if>
      <if test="projectName != null">
        PROJECT_NAME = #{projectName,jdbcType=VARCHAR},
      </if>
      <if test="mapCode != null">
        MAP_CODE = #{mapCode,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        ADDRESS = #{address,jdbcType=VARCHAR},
      </if>
      <if test="common != null">
        COMMON = #{common,jdbcType=VARCHAR},
      </if>
      <if test="version != null">
        VERSION = #{version,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null">
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createId != null">
        CREATE_ID = #{createId,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateId != null">
        UPDATE_ID = #{updateId,jdbcType=VARCHAR},
      </if>
      <if test="deleted != null">
        DELETED = #{deleted,jdbcType=DECIMAL},
      </if>
      <if test="isvalide != null">
        ISVALIDE = #{isvalide,jdbcType=VARCHAR},
      </if>
      <if test="buildName != null">
        BUILD_NAME = #{buildName,jdbcType=VARCHAR},
      </if>
      <if test="communityName != null">
        COMMUNITY_NAME = #{communityName,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.funi.platform.lshc.entity.census.BuildInfo">
    update LSHC_BUILD_INFO
    set
      REGION = #{region,jdbcType=VARCHAR},
      STREET = #{street,jdbcType=VARCHAR},
      PROJECT_NAME = #{projectName,jdbcType=VARCHAR},
      MAP_CODE = #{mapCode,jdbcType=VARCHAR},
      ADDRESS = #{address,jdbcType=VARCHAR},
      COMMON = #{common,jdbcType=VARCHAR},
      VERSION = VERSION + 1,
      UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      UPDATE_ID = #{updateId,jdbcType=VARCHAR},
      BUILD_NAME = #{buildName,jdbcType=VARCHAR},
      COMMUNITY_NAME = #{communityName,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=VARCHAR}
  </update>
</mapper>